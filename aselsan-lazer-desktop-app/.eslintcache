[{"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/index.js":"1","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/App.js":"2","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Colors.ts":"3","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/tabs.js":"4","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/index.tsx":"5","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/tr.tsx":"6","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/en.tsx":"7","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/measure.js":"8","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/Header.js":"9","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/device.js":"10","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Params.ts":"11","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/stores/InstantStore.ts":"12","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Config.ts":"13","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/services/BLEService.ts":"14","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/stores/MainStore.ts":"15","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/laserMeter.js":"16","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/findLocation.tsx":"17","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/Conversions.tsx":"18","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/cMoment.tsx":"19","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/Buffer.tsx":"20","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/findData.tsx":"21","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/toast.tsx":"22","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/SetModal.tsx":"23","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/selectDevice.js":"24","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/Loading.js":"25","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/setting.js":"26","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/compass.js":"27","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/slide.js":"28","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/moreInfo.js":"29"},{"size":1623,"mtime":1654253897081,"results":"30","hashOfConfig":"31"},{"size":1153,"mtime":1654256921795,"results":"32","hashOfConfig":"31"},{"size":304,"mtime":1653641925889,"results":"33","hashOfConfig":"31"},{"size":3558,"mtime":1654159024488,"results":"34","hashOfConfig":"31"},{"size":499,"mtime":1653291869963,"results":"35","hashOfConfig":"31"},{"size":4156,"mtime":1654504681419,"results":"36","hashOfConfig":"31"},{"size":6089,"mtime":1649403948014,"results":"37","hashOfConfig":"31"},{"size":1439,"mtime":1654253792307,"results":"38","hashOfConfig":"31"},{"size":1849,"mtime":1654254374577,"results":"39","hashOfConfig":"31"},{"size":7151,"mtime":1654253792298,"results":"40","hashOfConfig":"31"},{"size":4912,"mtime":1653720617863,"results":"41","hashOfConfig":"31"},{"size":1255,"mtime":1653990986330,"results":"42","hashOfConfig":"31"},{"size":5521,"mtime":1654257922449,"results":"43","hashOfConfig":"31"},{"size":6103,"mtime":1654507065617,"results":"44","hashOfConfig":"31"},{"size":744,"mtime":1653719718749,"results":"45","hashOfConfig":"31"},{"size":14795,"mtime":1654507150379,"results":"46","hashOfConfig":"31"},{"size":1856,"mtime":1654066864671,"results":"47","hashOfConfig":"31"},{"size":1150,"mtime":1654066892993,"results":"48","hashOfConfig":"31"},{"size":242,"mtime":1653719875434,"results":"49","hashOfConfig":"31"},{"size":211,"mtime":1653462773428,"results":"50","hashOfConfig":"31"},{"size":6661,"mtime":1654083152969,"results":"51","hashOfConfig":"31"},{"size":511,"mtime":1653719999197,"results":"52","hashOfConfig":"31"},{"size":8915,"mtime":1654068938866,"results":"53","hashOfConfig":"31"},{"size":3859,"mtime":1654247129351,"results":"54","hashOfConfig":"31"},{"size":744,"mtime":1653978695243,"results":"55","hashOfConfig":"31"},{"size":6949,"mtime":1654253792343,"results":"56","hashOfConfig":"31"},{"size":13007,"mtime":1654507016651,"results":"57","hashOfConfig":"31"},{"size":3075,"mtime":1654249090953,"results":"58","hashOfConfig":"31"},{"size":7973,"mtime":1654258005150,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"bu841q",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"62"},"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/index.js",[],["135","136"],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/App.js",["137"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport Colors from \"./constants/Colors\";\nimport {useHistory} from \"react-router-dom\";\nimport { Spin } from 'antd';\nimport {IStore} from \"./stores/InstantStore\";\nimport {MStore} from \"./stores/MainStore\";\nimport useStayAwake from \"use-stay-awake\";\n\n\nfunction App() {\n    const history = useHistory()\n    const device = useStayAwake();\n\n    const ble = IStore.ble;\n    useEffect(()=>{\n\n\n        setTimeout(()=>{\n            controlData()\n        },1000)\n    },[])\n\n\n    function controlData() {\n\n        if(MStore.settings.lock_screen){\n            device.preventSleeping();\n        }else{\n            device.allowSleeping();\n        }\n\n        if(MStore.first){\n            history.push(\"slide\")\n        }else{\n\n            let device = ble.getDevice()\n\n            if(device){\n                history.push(\"tabs\")\n            }else{\n                history.push(\"select-device\")\n            }\n\n        }\n    }\n\n  return (\n    <div className=\"contain\" style={{backgroundColor:Colors.darkGray,justifyContent:'center',alignItems:'center'}}>\n        <Spin/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Colors.ts",["138"],"export default {\n  darkPrimary: \"#002067\",\n  primary: \"#024089\",\n  secondary: \"#182b3f\",\n  white: \"white\",\n  black: \"black\",\n  gray: \"#8d8b8b\",\n  lightGray: \"#f5f5f5\",\n  darkGray: \"#1e2227\",\n  lightBlack: \"#0f1013\",\n  text:\"#a4a5a2\",\n  red:\"#B71C1C\",\n  green:\"#2E7D32\",\n  transparent: \"transparent\",\n};\n\n",["139","140"],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/tabs.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, {useEffect, useState} from \"react\"\nimport Colors from \"../constants/Colors\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport { styled } from \"@mui/material/styles\";\n\nimport {string} from \"../locales\";\nimport Measure from \"./measure\";\nimport Device from \"./device\";\nimport LaserMeter from \"./laserMeter\";\nimport {IStore} from \"../stores/InstantStore\";\nimport {observer} from \"mobx-react-lite\";\nimport Setting from \"./setting\";\n\nconst Tabs = () => {\n\n\n    useEffect(()=>{\n    },[])\n\n    const page = IStore.tab_index\n\n    return (\n        <div style={{backgroundColor:Colors.darkGray, height: '100vh', width: '100%' }}>\n            <div >\n                {\n                    page==\"olcum\"?\n                        <Measure/>:\n                        page==\"cihaz\"?\n                            <Device/>:\n                            page==\"yapilandirici\"?\n                                <Setting/>:\n                                page==\"lazer\"?\n                                    <LaserMeter/>:null\n                }\n            </div>\n            <div style={{position: 'fixed', bottom: 0, left: 0, right: 0 }}>\n                <BottomNavigation\n                    showLabels\n                    value={page}\n                    sx={{\n                        p:5,\n                        bgcolor: Colors.primary,\n                        '& .MuiBottomNavigationAction-label': {\n                            filter:\"opacity(0.4)\",\n                            color: Colors.white,\n                            fontSize: theme => theme.typography.caption,\n                            transition: 'none',\n                            fontWeight: 'bold',\n                            lineHeight: '20px'\n                        },\n                        '& .Mui-selected': {\n                            '& .MuiBottomNavigationAction-label': {\n                                filter:\"none\",\n                                color: Colors.white,\n                                fontSize: theme => theme.typography.caption,\n                                transition: 'none',\n                                fontWeight: 'bold',\n                                lineHeight: '20px'\n                            }\n                        }\n                    }}\n\n                    onChange={(event, newValue) => {\n                        IStore.setTabIndex(newValue)\n                    }}\n                >\n                    <BottomNavigationAction value={\"olcum\"} label={string.olcum2} icon={ <img src={require(\"../assets/images/goz.png\").default} style={{...page==\"olcum\"?{}:{filter:\"opacity(0.4)\"}, width:30,height:30}}/>} />\n                    <BottomNavigationAction value={\"cihaz\"} label={string.cihaz2} icon={ <img src={require(\"../assets/images/cihaz2.png\").default} style={{...page==\"cihaz\"?{}:{filter:\"opacity(0.4)\"},width:30,height:30}}/>} />\n                    <BottomNavigationAction value={\"yapilandirici\"} label={string.yapilandirici} icon={ <img src={require(\"../assets/images/yapilandirici.png\").default} style={{...page==\"yapilandirici\"?{}:{filter:\"opacity(0.4)\"},width:30,height:30}}/>} />\n                    <BottomNavigationAction value={\"lazer\"} label={string.lazermesafeolcer} icon={ <img src={require(\"../assets/images/lazer.png\").default} style={{...page==\"lazer\"?{}:{filter:\"opacity(0.4)\"},width:30,height:30}}/>} />\n                </BottomNavigation>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default observer(Tabs)","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/index.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/tr.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/locales/en.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/measure.js",["155"],"import React, {useEffect} from \"react\"\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport Header, {HelpText, MoreInfo} from \"../componenets/Header\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Measure = () => {\n    const history = useHistory()\n\n    useEffect(()=>{\n    },[])\n\n\n\n    return (\n        <div className=\"center contain column\"  style={{paddingBottom:100}}>\n\n           <div className=\"center\" style={{width:'100%'}}>\n               <Header\n                   left={()=><HelpText/>}\n                   right={()=><MoreInfo/>}\n               />\n           </div>\n            <div className=\"center\" style={{flex:1,fontSize:25,fontWeight:'bold',color:Colors.text}}>\n               LOGO\n           </div>\n            <div  className=\"center background-img\" style={{flex:6, width:'100%', backgroundImage:`url(${require(\"../assets/images/measure/bg.png\").default})`}}>\n                <img onClick={()=>{history.push(\"compass\")}} src={require(\"../assets/images/measure/button.png\").default} width={250} height={250}/>\n            </div>\n            <div className=\"flex column center\" style={{flex:1,fontSize:17,fontWeight:'bold',color:Colors.text}}>\n                {string.olcumyap}\n                <div style={{fontSize:14,fontWeight:\"normal\"}}>\n                    {string.olcumyapdesc}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Measure","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/Header.js",["156","157","158"],"import React, {useEffect} from 'react';\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport {LeftOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport function HelpText() {\n    return(\n        <div\n            onClick={()=>{alert(\"yardım\")}}\n            style={{cursor:'pointer', padding:20, textDecorationLine:'underline',fontWeigh:'bold',fontSize:14}}>{string.yardimaihtiyacinvarmi}\n        </div>\n    )\n}\n\nexport function MoreInfoButton({close=false}) {\n    const history = useHistory()\n\n    if(close){\n        return (\n            <div>\n                <img style={{marginTop:15,width:70,height:75}} src={require(\"../assets/images/secili-dahafazla.png\").default}/>\n            </div>\n        )\n    }\n    return(\n        <div\n            onClick={()=>{\n                history.push(\"more-info\")\n            }}\n            style={{cursor:'pointer'}}\n        >\n            <img style={{width:50,height:50}} src={require(\"../assets/images/dahafazla.png\").default}/>\n        </div>\n    )\n}\n\nfunction Header({onBack, left=()=><div/>, title=\"\",right=()=><div/>,}) {\n\n  return (\n    <div className=\"flex row\" style={{ flexDirection:'space-between', alignItems:'center', color:Colors.text, width:'100%', height:60, backgroundColor:Colors.darkGray}}>\n        <div className=\"flex-1 left\" >\n            {\n                onBack?\n                    <div onClick={onBack} style={{padding:20,cursor:'pointer'}}>\n                        <LeftOutlined  style={{fontSize:25,color:Colors.text}} />\n                    </div>:null\n            }\n            {left()}\n        </div>\n        <div className=\"flex-1 center\" style={{fontSize:18,fontWeight:\"bold\"}}>{title}</div>\n        <div className=\"flex-1 right\"  >\n            {right()}\n        </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/device.js",["159","160"],"import React, {useEffect, useState} from \"react\"\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport Header, {HelpText, MoreInfoButton} from \"../componenets/Header\";\nimport {IStore} from \"../stores/InstantStore\";\nimport {Params} from \"../constants/Params\";\nimport {Spin} from \"antd\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {observer} from \"mobx-react-lite\";\nimport BLEService from \"../services/BLEService\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Device = () => {\n    const history = useHistory()\n    const ble = IStore.ble;\n    const params = Params()\n    const usage_params = {\n        serial_no : params.serial_no,\n        device_version : params.device_version,\n        temperature : params.temperature,\n        pressure : params.pressure,\n        shot_counter : params.shot_counter,\n        statuses : params.statuses,\n    }\n\n\n    const [data,setData] = useState(ble.getData())\n    const [device,setDevice] = useState(\"loading\")\n\n    useEffect(()=>{\n        BLEService.event.on(\"monitor\",_setData)\n        controlDevice()\n\n\n        return()=>{\n            BLEService.event.removeListener(\"monitor\",_setData)\n        }\n    },[])\n\n    function _setData({all_data}) {\n        setData({...all_data})\n    }\n\n\n    function reload() {\n        setData({\n            ...data,\n            ...{\n                serial_no:\"\",\n                device_version:\"\",\n                temperature:\"\",\n                pressure:\"\",\n                shot_counter:\"\",\n                statuses:{\n                    odometer_activity:{\n                        title:\"lazermesafeolceraktifligi\",\n                        value:null\n                    },\n                    compass_activity:{\n                        title:\"pusulaaktifligi\",\n                        value:null\n                    },\n                    bluetooth_activity:{\n                        title:\"bluetoothaktifligi\",\n                        value:null\n                    },\n                    odometer_error:{\n                        title:\"lazermesafeolcerhatabilgisi\",\n                        value:null\n                    },\n                    compass_error:{\n                        title:\"pusulahatabilgisi\",\n                        value:null\n                    },\n                    bluetooth_error:{\n                        title:\"bluetoothhatabilgisi\",\n                        value:null\n                    },\n                    battery_error:{\n                        title:\"bataryahatabilgisi\",\n                        value:null\n                    }\n                },\n            }\n        })\n\n        controlDevice()\n    }\n\n    async function controlDevice() {\n        const device = ble.getDevice()\n        setDevice(device)\n\n        if(device){\n            getValues()\n        }\n    }\n\n    function getValues() {\n\n        for(let [key,param] of Object.entries(usage_params)){\n            if(param.getHex)\n                ble.sendDataToDevice(key,param.getHex).then(()=>{})\n        }\n    }\n\n\n    if(!device){\n        return (\n            <div className=\"column contain center\">\n                <div style={{ fontSize:20,color:Colors.text,fontWeight:'bold'}}>{string[\"101\"]}</div>\n                <div\n                    onClick={()=>{\n                        history.push(\"select-device\")\n                    }}\n\n                    style={{margin:10, padding:\"10px 15px\", backgroundColor:Colors.primary,borderRadius:10, fontSize:16,color:Colors.text,fontWeight:'bold'}}>{string.simdibaglan}</div>\n            </div>\n\n        )\n    }\n\n    if(device==\"loading\"){\n        return null\n    }\n\n    return (\n        <div className=\"center contain column\">\n\n            <div className=\"center\" style={{width:'100%'}}>\n                <Header\n                    left={()=><HelpText/>}\n                    right={()=><MoreInfoButton/>}\n                />\n            </div>\n            <div className=\"flex row\"  style={{width:'50%', flexDirection:'space-between', alignItems:'center',fontSize:25,fontWeight:'bold',color:Colors.primary}}>\n                <div className=\"flex-1\"></div>\n                <div className=\"flex-3 center\" style={{textAlign:'center'}}>\n                    {string.cihazdurumbilgisi}\n                </div>\n                <div  className=\"flex-1\" style={{justifyContent:'flex-end'}}>\n                    <div style={{padding:20}} onClick={reload}>\n                        <ReloadOutlined style={{fontSize:20,color:Colors.text}}/>\n                    </div>\n                </div>\n            </div>\n            <div  className=\"flex column scroll\" style={{width:\"100%\" ,height:\"100vh\"}} >\n\n                <div  style={{alignSelf:'center', padding:20,margin:20,borderRadius:10, backgroundColor:Colors.secondary, width:'50%'}}>\n                    {\n                        Object.entries(usage_params).map(([key,{title}])=>{\n                            const value = data[key]\n\n                            return (\n                                <div key={key}  style={{margin:5,marginBottom:20,padding:5, borderStyle:'dashed', borderWidth:1,borderRadius:1,borderColor:'#667587'}}>\n                                    <div style={{color:Colors.text,padding:10,fontSize:16,fontWeight:'bold'}}>{string[title]}</div>\n                                    <hr style={{borderColor:\"#4c5f72\"}}/>\n                                    <div>\n                                        {\n                                            value?\n                                                typeof value == \"string\"?\n                                                    <div style={{height:50,color:Colors.text,padding:10,fontSize:16,fontWeight:'bold'}}>{value}</div> :\n                                                    Object.values(value).map(({title,value},index)=>(\n                                                        <div key={index} className=\"flex row\"  style={{justifyContent:'space-between',alignItems:'center'}}>\n                                                            <div style={{display:'flex',flex:2,textAlign:'left',color:Colors.text,padding:10,fontSize:16,fontWeight:'bold'}} >{string[title]}</div>\n                                                            <div style={{height:40, display:'flex',flex:1,textAlign:'left',color:Colors.text,padding:10,fontSize:14,fontWeight:'bold'}} >{value?string[value]??value:<Spin/>}</div>\n                                                        </div>\n                                                    ))\n                                                :\n                                                <div style={{padding:10, height:50,display:'flex', alignItems:'center'}}>\n                                                    <Spin />\n                                                </div>\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    <div style={{height:100}}/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default observer(Device)","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Params.ts",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/stores/InstantStore.ts",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/constants/Config.ts",["161","162"],"import {string} from \"../locales\";\nconst shell = require('electron').shell;\n\nexport const contacts={\n  Phone:{\n    title:\"telefon\",\n    value:\"+0850 360 10 30\",\n    onPress:(phone:any)=>{\n      shell.openExternal(`tel:${phone}`)\n    }\n  },\n  Email:{\n    title:\"email\",\n    value:\"aselsan@hs02.kep.tr\",\n    onPress:(email:any)=>{\n      shell.openExternal(`mailto:${email}`)\n    }\n  },\n  WebSite:{\n    title:\"website\",\n    value:\"www.aselsan.com.tr\",\n    onPress:(web:any)=>{\n      shell.openExternal(`https://${web}`)\n    }\n  },\n  Address:{\n    title:\"adres\",\n    value:\"P.K.1, 06200, Yenimahalle | Ankara, Türkiye\",\n    onPress:(address:any)=>{\n      shell.openExternal(`http://maps.google.com/?q=1200 ${address}`)\n    }\n  }\n}\n\nexport const sss = string.dil==\"tr\"?{\n  Application:[\n    {\n      title:\"Uygulama Soru 1\",\n      content:\"Cevap 1\"\n    },\n    {\n      title:\"Uygulama Soru 2\",\n      content:\"Cevap 2\"\n    },\n    {\n      title:\"Uygulama Soru 3\",\n      content:\"Cevap 3\"\n    }\n  ],\n  DEVICE:[\n    {\n      title:\"Cihaz Soru 1\",\n      content:\"Cevap 1\"\n    },\n    {\n      title:\"Cihaz Soru 2\",\n      content:\"Cevap 2\"\n    },\n    {\n      title:\"Cihaz Soru 3\",\n      content:\"Cevap 3\"\n    }\n  ]\n}:{\n  Application:[\n    {\n      title:\"Application Ask 1\",\n      content:\"Answer 1\"\n    },\n    {\n      title:\"Application Ask 2\",\n      content:\"Answer 2\"\n    },\n    {\n      title:\"Application Ask 3\",\n      content:\"Answer 3\"\n    }\n  ],\n  DEVICE:[\n    {\n      title:\"Device Ask 1\",\n      content:\"Answer 1\"\n    },\n    {\n      title:\"Device Ask 2\",\n      content:\"Answer 2\"\n    },\n    {\n      title:\"Device Ask 3\",\n      content:\"Answer 3\"\n    }\n  ]\n}\n\nexport const HomeScreenTypes = {\n  MesafeVePusula: {\n    id: 0,\n    value: \"mesafevepusula\",\n  },\n  Pusula: {\n    id: 1,\n    value: \"pusula\",\n  },\n  Mesafe: {\n    id: 2,\n    value: \"mesafe\",\n  }\n};\n\nexport const DistanceUnitTypes = {\n  Metre: {\n    id: 0,\n    value: \"metre\",\n    symbol:\"m\",\n    toFeet:((f:number)=>parseFloat((f * 3.281).toString())),\n  },\n  Feet: {\n    id: 1,\n    value: \"feet\",\n    symbol:\"ft\",\n    toMeter:((f:number)=>parseFloat((f / 3.281).toString()))\n  }\n};\n\nexport const AngleUnitTypes = {\n  Derece: {\n    id: 0,\n    value: \"derece\",\n    symbol:\"°\",\n  },\n  Milyem6000: {\n    id: 1,\n    value: \"6000 Milyem\",\n    symbol:\"m/\",\n    toDegree:((m:number)=>m*(360/6000))\n  },\n  Milyem6300: {\n    id: 2,\n    value: \"6300 Milyem\",\n    symbol:\"m/\",\n    toDegree:((m:number)=>m*(360/6300))\n\n  },\n  Milyem6400: {\n    id: 3,\n    value: \"6400 Milyem\",\n    symbol:\"m/\",\n    toDegree:((m:number)=>m*(360/6400))\n  }\n\n};\n\nexport const OdometerActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  }\n};\n\nexport const CompassActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  }\n};\n\nexport const BluetoothActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  }\n};\n\nexport const OdometerErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataYok: {\n    id: \"10\",\n    value: \"hatayok\",\n  },\n  HataVar: {\n    id: \"11\",\n    value: \"hatavar\",\n  }\n};\n\nexport const CompassErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataYok: {\n    id: \"10\",\n    value: \"hatayok\",\n  },\n  HataVar: {\n    id: \"11\",\n    value: \"hatavar\",\n  },\n};\n\nexport const BluetoothErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataVar: {\n    id: \"10\",\n    value: \"hatavar\",\n  },\n  HataYok: {\n    id: \"11\",\n    value: \"hatayok\",\n  }\n};\n\nexport const BatteryErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  PilGucuIyi: {\n    id: \"10\",\n    value: \"pilgucuiyi\",\n  },\n  PilGucuZayif: {\n    id: \"11\",\n    value: \"pilgucuzayif\",\n  }\n};\n\nexport const ArticleMode = {\n  Kapali: {\n    id: 0,\n    value: \"kapali\",\n  },\n  Acik: {\n    id: 1,\n    value: \"acik\",\n  },\n  Otomatik: {\n    id: 2,\n    value: \"otomatik\",\n  }\n};\n\n\nexport const Language = {\n  Turkce: {\n    id: 0,\n    value: \"turkce\",\n  },\n  Ingilizce: {\n    id: 1,\n    value: \"ingilizce\",\n  }\n};\n\n\nexport const NightVisionMode = {\n  Kapali: {\n    id: 0,\n    value: \"kapali\",\n  },\n  Acik: {\n    id: 1,\n    value: \"acik\",\n  }\n};\n\n\nexport const DeviceSleepTime = {\n  t0: {\n    id: 0,\n    value: \"sonsuz\",\n  },\n  t20: {\n    id: 1,\n    value: \"20 \"+string.saniye,\n  },\n  t30: {\n    id: 2,\n    value: \"30 \"+string.saniye,\n  },\n  t60: {\n    id: 3,\n    value: \"1 \"+string.dakika,\n  },\n  t120: {\n    id: 4,\n    value: \"2 \"+string.dakika,\n  },\n  t300: {\n    id: 5,\n    value: \"5 \"+string.dakika,\n  },\n  t600: {\n    id: 6,\n    value: \"10 \"+string.dakika,\n  }\n};\n\n\nexport const BluetoothSleepTime = {\n  t0: {\n    id: 0,\n    value: \"sonsuz\",\n  },\n  t20: {\n    id: 1,\n    value: \"20 \"+string.saniye,\n  },\n  t30: {\n    id: 2,\n    value: \"30 \"+string.saniye,\n  },\n  t60: {\n    id: 3,\n    value: \"1 \"+string.dakika,\n  },\n  t120: {\n    id: 4,\n    value: \"2 \"+string.dakika,\n  },\n  t300: {\n    id: 5,\n    value: \"5 \"+string.dakika,\n  },\n  t600: {\n    id: 6,\n    value: \"10 \"+string.dakika,\n  }\n};\n\nexport function findType(data: any, id: any, key = \"value\") {\n  let res: any = \" \";\n  try {\n    res = Object.values(data).find((e: any) => e.id == id);\n    if (key) res = res[key];\n  } catch (e) {}\n  return res;\n}\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/services/BLEService.ts",["163","164","165","166"],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/stores/MainStore.ts",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/laserMeter.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/findLocation.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/Conversions.tsx",["182","183","184","185","186","187"],"import {AngleUnitTypes, DistanceUnitTypes, findType} from \"../constants/Config\";\n\n\nexport function distanceConversion(distance:number,unit1:any,unit2:any){\n    let unit\n    try {\n        unit1 = findType(DistanceUnitTypes,unit1,\"\")\n        unit2 = findType(DistanceUnitTypes,unit2,\"\")\n        unit = unit2.symbol\n\n        if(unit1.id == DistanceUnitTypes.Metre.id && unit2.id == DistanceUnitTypes.Feet.id){\n            distance = unit1.toFeet(distance)\n        }else if(unit1.id == DistanceUnitTypes.Feet.id && unit2.id == DistanceUnitTypes.Metre.id){\n            distance = unit1.toMeter(distance)\n        }\n    }catch (e) {\n        return {distance: 0,unit:\"\"}\n    }\n\n\n    return {distance,unit}\n}\n\n\nexport function angleConversion(angle:number,unit1:any,unit2:any){\n\n    let unit\n    try {\n        unit1 = findType(AngleUnitTypes,unit1,\"\")\n        unit2 = findType(AngleUnitTypes,unit2,\"\")\n        unit = unit2.symbol\n\n        if(unit1.id != AngleUnitTypes.Derece.id && unit2.id == AngleUnitTypes.Derece.id){\n            angle = unit1.toDegree(angle)\n        }\n\n    }catch (e) {\n\n        return {angle: 0,unit:\"\"}\n    }\n\n\n    return {angle,unit}\n}","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/cMoment.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/Buffer.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/findData.tsx",["188","189","190"],"import {PROCESS_KEYS} from \"../constants/Params\";\nimport {Base64ToHex} from \"./Buffer\";\nimport {\n  AngleUnitTypes,\n  ArticleMode,\n  BatteryErrorTypes,\n  BluetoothActivityTypes, BluetoothErrorTypes, BluetoothSleepTime,\n  CompassActivityTypes, CompassErrorTypes, DeviceSleepTime, DistanceUnitTypes,\n  findType, Language, NightVisionMode,\n  OdometerActivityTypes,\n  OdometerErrorTypes\n} from \"../constants/Config\";\n\n\nexport function findData(value:any) {\n  try {\n    value = Base64ToHex(value)\n    const command = value[1]\n\n\n    switch (command) {\n      case PROCESS_KEYS.SeriNo:\n        return {key:\"serial_no\",value:findSerial(value)}\n      case PROCESS_KEYS.Versiyon:\n        return {key:\"device_version\",value:findVersion(value)}\n      case PROCESS_KEYS.Sicaklik:\n        return {key:\"temperature\",value:findTemperature(value)}\n      case PROCESS_KEYS.Basinc:\n        return {key:\"pressure\",value:findPressure(value)}\n      case PROCESS_KEYS.Sayac:\n        return {key:\"shot_counter\",value:findShotCounter(value)}\n      case PROCESS_KEYS.DurumBilgisi:\n        return {key:\"statuses\",value:findStatuses(value)}\n      case PROCESS_KEYS.MesafeOlcuBirimi:\n      case PROCESS_KEYS.MesafeOlcuBirimiYaz:\n        return {key:\"distance_unit\",value:findDistanceUnit(value)}\n      case PROCESS_KEYS.Artikil:\n      case PROCESS_KEYS.ArtikilYaz:\n        return {key:\"article_mode\",value:findArticleMode(value)}\n      case PROCESS_KEYS.Dil:\n      case PROCESS_KEYS.DilYaz:\n        return {key:\"language\",value:findLanguage(value)}\n      case PROCESS_KEYS.AciOlcuBirimi:\n      case PROCESS_KEYS.AciOlcuBirimiYaz:\n        return {key:\"angle_unit_type\",value:findAngleUnit(value)}\n      case PROCESS_KEYS.GeceGorus:\n      case PROCESS_KEYS.GeceGorusYaz:\n        return {key:\"night_vision_mode\",value:findNightVisionMode(value)}\n      case PROCESS_KEYS.CihazKapanmaSuresi:\n      case PROCESS_KEYS.CihazKapanmaSuresiYaz:\n        return {key:\"device_sleep_time\",value:findDeviceSleep(value)}\n      case PROCESS_KEYS.BluetoothKapanmaSuresi:\n      case PROCESS_KEYS.BluetoothKapanmaSuresiYaz:\n        return {key:\"bluetooth_sleep_time\",value:findBluetoothSleep(value)}\n      case PROCESS_KEYS.AltKapiLimiti:\n      case PROCESS_KEYS.AltKapiLimitiYaz:\n        return {key:\"bottom_door_lock\",value:findBottomDoorLock(value)}\n      case PROCESS_KEYS.UstKapiLimiti:\n      case PROCESS_KEYS.UstKapiLimitiYaz:\n        return {key:\"top_door_lock\",value:findTopDoorLock(value)}\n      case PROCESS_KEYS.ManyetikSapmaAcisi:\n      case PROCESS_KEYS.ManyetikSapmaAcisiYaz:\n        return {key:\"magnetic_declination_angle\",value:findMagneticDeclinationAngle(value)}\n      case PROCESS_KEYS.MesafeVePusula:\n        return {key:\"distance_and_compass\",value:findDistanceAndCompass(value)}\n      default:\n        return \"Not Found\"\n\n    }\n  }catch (e) {\n    console.error(e,value)\n    return \"Error Data\"\n  }\n\n}\n\n\nfunction findSerial(value:any) {\n  return ((value[2] << 8) | (value[3])).toString()\n}\n\nfunction findVersion(value:any) {\n  return value[2]+\".\"+value[3]+\"v\"\n}\n\nfunction findTemperature(value:any) {\n  let data =(value[2] << 8) | (value[3])\n  if ((data & 0x8000) > 0) {\n    data = data - 0x10000;\n  }\n  return data/100+\"°\"\n}\n\nfunction findPressure(value:any) {\n  return ((value[2] << 8) | (value[3])).toString()\n}\n\nfunction findShotCounter(value:any) {\n  return ((value[2] << 24) | (value[3] << 16) | (value[4] << 8) | (value[5])).toString()\n}\n\nfunction findStatuses(value:any) {\n\n  let status1_binary = value[2].toString(2)\n  let status2_binary = value[3].toString(2)\n\n  return {\n    odometer_activity:{\n      title:\"lazermesafeolceraktifligi\",\n      value:findType(OdometerActivityTypes,status1_binary[0])\n    },\n    compass_activity:{\n      title:\"pusulaaktifligi\",\n      value:findType(CompassActivityTypes,status1_binary[1])\n    },\n    bluetooth_activity:{\n      title:\"bluetoothaktifligi\",\n      value:findType(BluetoothActivityTypes,status1_binary[2])\n    },\n    odometer_error:{\n      title:\"lazermesafeolcerhatabilgisi\",\n      value:findType(OdometerErrorTypes,status2_binary[0]+\"\"+status2_binary[1])\n    },\n    compass_error:{\n      title:\"pusulahatabilgisi\",\n      value:findType(CompassErrorTypes,status2_binary[2]+\"\"+status2_binary[3])\n    },\n    bluetooth_error:{\n      title:\"bluetoothhatabilgisi\",\n      value:findType(BluetoothErrorTypes,status2_binary[4]+\"\"+status2_binary[5])\n    },\n    battery_error:{\n      title:\"bataryahatabilgisi\",\n      value:findType(BatteryErrorTypes,status2_binary[6]+\"\"+status2_binary[7])\n    },\n  }\n}\n\nfunction findDistanceUnit(value:any) {\n  return findType(DistanceUnitTypes,value[3],\"\")\n}\n\nfunction findArticleMode(value:any) {\n  return findType(ArticleMode,value[3],\"\")\n}\n\nfunction findLanguage(value:any) {\n  return findType(Language,value[3],\"\")\n}\n\nfunction findAngleUnit(value:any) {\n  return findType(AngleUnitTypes,value[3],\"\")\n}\n\nfunction findNightVisionMode(value:any) {\n  return findType(NightVisionMode,value[3],\"\")\n}\n\nfunction findDeviceSleep(value:any) {\n  return findType(DeviceSleepTime,value[3],\"\")\n}\n\nfunction findBluetoothSleep(value:any) {\n  return findType(BluetoothSleepTime,value[3],\"\")\n}\n\nfunction findBottomDoorLock(value:any) {\n  return ((value[2] << 8) | (value[3])).toString()\n}\n\nfunction findTopDoorLock(value:any) {\n  return ((value[2] << 8) | (value[3])).toString()\n}\n\n\nfunction findMagneticDeclinationAngle(value:any) {\n  let data = (value[2] << 8) | (value[3]);\n\n  if ((data & 0x8000) > 0) {\n    data = data - 0x10000;\n  }\n\n  return data.toString()\n}\n\nfunction findDistanceAndCompass(value:any) {\n\n  const distance_unit = findType(DistanceUnitTypes,value[2],\"id\")\n  const distance1 = ((value[3] << 16) | (value[4] << 8)  | value[5])/100;\n  const distance2 = ((value[6] << 16) | (value[7] << 8)  | value[8])/100;\n  const distance3 = ((value[9] << 16) | (value[10] << 8)  | value[11])/100;\n  const distance = [...distance1?[distance1]:[],...distance2?[distance2]:[],...distance3?[distance3]:[]]\n\n  const angle_unit = findType(AngleUnitTypes,value[12],\"id\")\n  let azimuth = (value[13] << 8)  | (value[14]);\n  let elevation = (value[15] << 8)  | (value[16]);\n  let roll = (value[17] << 8)  | (value[18]);\n\n  if ((azimuth & 0x8000) > 0) {\n    azimuth = azimuth - 0x10000;\n  }\n  azimuth = azimuth/(angle_unit==AngleUnitTypes.Derece.id?10:1)\n\n  if ((elevation & 0x8000) > 0) {\n    elevation = elevation - 0x10000;\n  }\n  elevation = elevation/(angle_unit==AngleUnitTypes.Derece.id?10:1)\n\n  if ((roll & 0x8000) > 0) {\n    roll = roll - 0x10000;\n  }\n  roll = roll/(angle_unit==AngleUnitTypes.Derece.id?10:1)\n\n\n\n\n  return {\n    distance,\n    distance_unit,\n    angle_unit,\n    azimuth,\n    elevation,\n    roll\n  }\n}\n\n\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/functions/toast.tsx",[],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/SetModal.tsx",["191","192","193","194","195","196","197","198","199","200","201"],"import * as React from \"react\";\n\nimport { observer } from \"mobx-react-lite\";\nimport { IStore } from \"../stores/InstantStore\";\nimport {useEffect, useState} from \"react\";\nimport {InputNumber, Modal, Spin} from \"antd\";\nimport {string} from \"../locales\";\nimport Colors from \"../constants/Colors\";\nimport {CheckCircleOutlined, MinusCircleOutlined} from \"@ant-design/icons\";\nimport {error} from \"../functions/toast\";\n\nexport const setModalTypes = {\n    Select:\"select\",\n    Number:\"number\"\n}\n\nfunction SetModal() {\n    const {\n        visible,\n        title=\"\",\n        description=\"\",\n        icon=require(\"../assets/images/cihaz2.png\"),\n        value,\n        options,\n        type,\n        numberParams={},\n        onChange=async (data:any)=>{}\n    } = IStore.set_modal;\n\n    const [defaultValue,setDefaultValue]:any = useState(null)\n    const [loading,setLoading] = useState(false)\n\n    useEffect(()=>{\n        setDefaultValue(value)\n    },[value])\n\n    return (\n        <Modal\n            bodyStyle={{padding:0, backgroundColor:Colors.darkGray}}\n            centered\n            closable={false}\n            visible={visible}\n            okText={string.kaydet}\n            cancelText={string.kapat}\n            onOk={()=>{IStore.setSetModal({visible:false})}}\n            onCancel={()=>{IStore.setSetModal({visible:false})}}\n            footer={null}\n        >\n            <div style={{width:'100%'}}>\n                {\n                    icon?\n                        <div\n                            style={{width:'100%', display:'flex',justifyContent:'flex-end'}}\n                        >\n                            <div className=\"background-img\" style={{display:'flex', width:60,height:55,backgroundImage:`url(${require(\"../assets/images/modal/corner.png\").default})`}}  >\n                                <div style={{marginLeft:20,marginBottom:10}} className=\"flex-1 center\">\n                                    <img src={icon.default} height={25} width={25} />\n                                </div>\n                            </div>\n                        </div>:<div style={{height:25}}/>\n                }\n                <div style={{padding:15}}>\n                    {\n                        title? <div style={{fontSize:18,fontWeight:'bold',color:Colors.text,textAlign:'center'}} >{string[title]}</div>:null\n                    }\n                    {\n                        description? <div style={{fontSize:15,fontWeight:'bold',color:Colors.text,textAlign:'center'}} >{string[description]}</div>:null\n                    }\n                </div>\n                <div className=\"flex center\" style={{width:'100%',padding:10}}>\n                    {\n                        type==setModalTypes.Select?\n                            <Select\n                                defaultValue={defaultValue}\n                                options={options}\n                                onChange={(data:any)=>{\n\n                                    setDefaultValue(data)\n                                }}\n                            />:\n                            type==setModalTypes.Number?\n                                <Number\n                                    numberParams={numberParams}\n                                    defaultValue={defaultValue}\n                                    onChange={(data:any)=>{\n                                        setDefaultValue(data)\n                                    }}\n                                />:null\n                    }\n                </div>\n\n                <div className={\"flex row\"} style={{padding:15, width:'100%',margin:\"40px 0\",alignItems:'center',justifyContent:'space-around'}}>\n                    <div className=\"flex-1 center\">\n                        <div\n                            style={{fontSize:18,color:Colors.primary,fontWeight:'bold', padding:10}}\n                            onClick={()=>{IStore.setSetModal({visible:false})}}\n                        >\n                            {string.kapat}\n                        </div>\n                    </div>\n                    <div className=\"flex-1 center\">\n                        <div\n                            style={{fontSize:18,color:Colors.primary,fontWeight:'bold', padding:10}}\n                            onClick={()=>{\n                                if(loading){\n                                    return;\n                                }\n                                let value:any = defaultValue;\n\n\n                                if(type==setModalTypes.Number){\n                                    let {fixed,min,max,unit=\"\"} = numberParams;\n\n\n                                    value = parseInt((value).toString())\n                                    console.warn(value,max)\n\n                                    if(isNaN(value) || !/^-?\\d+$/.test(value.toString())){\n                                        error(\"Geçersiz Veri\")\n                                        return;\n                                    }\n                                    if(min!=undefined && value<min){\n                                        if(fixed){\n                                            min = min/Math.pow(10,fixed)\n                                        }\n                                        error(\"Minimum \"+min+\" \"+unit)\n                                        return;\n                                    }\n                                    if(max!=undefined && value>max){\n                                        if(fixed){\n                                            max = max/Math.pow(10,fixed)\n                                        }\n                                        error(\"Maximum \"+max+\" \"+unit)\n                                        return;\n                                    }\n                                }\n\n                                setLoading(true)\n                                onChange(value).then(()=>{\n                                    setLoading(false)\n                                    IStore.setSetModal({visible:false})\n                                })\n                            }}\n                        >\n                            {\n                                loading?\n                                    <Spin/>:\n                                    string.kaydet\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nfunction Select({defaultValue, options,onChange}:any) {\n    return(\n        <div  style={{width:\"50%\"}}>\n            {\n                Array.isArray(options)? options.map(({id,value}:any)=>(\n                    <div\n                        key={id}\n                        style={{width:\"100%\"}}\n                        onClick={()=>{\n                            onChange(id)\n                        }}\n\n                    >\n                        <div style={{ borderBottomStyle:'dashed', borderBottomWidth:1,borderRadius:1,borderColor:'#667587',padding:10,width:'100%',alignItems:'center',justifyContent:'space-between'}} className=\"flex row\" >\n                            <div style={{display:'flex',flex:1,fontSize:15,fontWeight:'bold',color:Colors.text+(defaultValue==id?\"\":\"88\"),padding:7}}>{string[value]??value}</div>\n                            {\n                                defaultValue==id?\n                                    <CheckCircleOutlined style={{fontSize:18,color:Colors.text+(defaultValue==id?\"\":\"88\")}} />:\n                                    <MinusCircleOutlined style={{fontSize:18,color:Colors.text+(defaultValue==id?\"\":\"88\")}} />\n                            }\n                        </div>\n\n                    </div>\n                )):null\n            }\n        </div>\n    )\n}\n\n\nfunction Number({defaultValue=\"loading\",onChange,numberParams={}}:any) {\n    let {fixed=0,min=0,max=0,unit=\"\"} = numberParams;\n\n    if(fixed){\n        min = min/Math.pow(10,fixed)\n        max = max/Math.pow(10,fixed)\n    }\n\n    if(defaultValue==\"loading\")\n        return null\n\n\n    return(\n        <div className=\"flex center\" style={{width:\"100%\"}}>\n            <div className=\"flex row\" style={{ width:\"50%\",justifyContent:'space-between',alignItems:'center', alignSelf:'center',display:'flex',padding:10, borderStyle:'dashed', borderWidth:1,borderRadius:1,borderColor:'#667587'}}>\n                <InputNumber\n                    bordered={false} precision={fixed}  style={{flex:1,color:Colors.text,backgroundColor:Colors.darkGray,borderColor:Colors.text}}  size=\"large\" min={min} max={max} defaultValue={defaultValue/Math.pow(10,fixed)} stringMode\n                    onChange={(num)=>{\n                        onChange(num*Math.pow(10,fixed))\n                    }}\n                />\n                <div style={{fontSize:14,color:Colors.text}}>{unit}</div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default observer(SetModal);\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/selectDevice.js",["202","203","204"],"import React, {useEffect, useState} from \"react\"\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport Header, {HelpText, MoreInfo} from \"../componenets/Header\";\nimport {useHistory} from \"react-router-dom\";\nimport {IStore} from \"../stores/InstantStore\";\nimport {error} from \"../functions/toast\";\nconst {ipcRenderer} = require(\"electron\");\n\n\nconst SelectDevice = () => {\n    const ble = IStore.ble\n    const history = useHistory()\n\n    const [devices,setDevices] = useState([])\n    useEffect(()=>{\n\n    },[])\n\n\n    function scan() {\n        navigator.bluetooth.requestDevice({ acceptAllDevices: true}).then((device)=>{\n            device.gatt.connect().then((service)=>{\n                console.warn(device.connected)\n                IStore.setLoading(false)\n                ble.setDevice(service)\n                history.goBack()\n            }).catch((e)=>{\n                IStore.setLoading(false)\n                setDevices([])\n                console.warn(e)\n                error()\n            })\n\n\n        })\n\n        ipcRenderer.on('devices', (event, deviceList) => {\n            if(Array.isArray(deviceList) && deviceList.length){\n                setDevices([...deviceList])\n            }\n        })\n\n    }\n\n    return (\n        <div className=\"center contain column\" >\n\n\n           <div className=\"center\" style={{width:'100%'}}>\n               <Header\n                   title=\"Cihazlar\"\n                   onBack={()=>{\n                       history.goBack()\n                   }}\n               />\n           </div>\n            <div\n                className=\"button\"\n                onClick={()=>{\n                    IStore.setLoading(false)\n                    ble.setDevice(\"test\")\n                    history.goBack()\n                }}\n                style={{alignSelf:'center'}}\n            >\n                Demo Verileri Kullan\n            </div>\n\n            <div className={\"flex contain column scroll\"} style={{backgroundColor:Colors.darkGray}}>\n\n                {\n                    devices.length?\n                        <div className=\"scroll flex column\" style={{alignItems:'center'}}>\n                            {\n                                devices.map(({deviceId,deviceName},index)=>{\n                                    return(\n                                        <div\n                                            key={index}\n                                            onClick={()=>{\n                                                IStore.setLoading(true)\n                                                setTimeout(()=>{\n                                                    IStore.setLoading(false)\n                                                    setDevices([])\n                                                },10000)\n                                                ipcRenderer.send('selected-device', deviceId)\n\n                                            }}\n                                            style={{width:'60%', borderBottom:`1px solid ${Colors.text}`, textAlign:'center',padding:10, fontSize:20,fontWeight:'bold',color:'white'}}>{deviceName}\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div> :\n                        <div\n                            className={\"contain center flex\"}\n                        >\n                            <div\n                                className=\"button\"\n                                onClick={scan}\n                                style={{alignSelf:'center'}}\n                            >\n                                Cihazları Tara\n                            </div>\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\n\nexport default SelectDevice","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/componenets/Loading.js",["205"],"import React, {useEffect} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport Colors from \"../constants/Colors\";\nimport {Spin} from \"antd\";\nimport {IStore} from \"../stores/InstantStore\";\n\nconst Loading=()=>{\n\n    if(!IStore.loading)\n        return(null)\n\n    return(\n        <div style={{display:'flex', width:'100%',height:'100vh', zIndex:9999, flex:1,position:'absolute',top:0,left:0,justifyContent:'center',alignItems:'center'}}>\n            <div className=\"center\" style={{ border:`4px solid ${Colors.primary}`, width:80,height:80, backgroundColor:Colors.darkGray,borderRadius:1000}}>\n                <Spin size=\"large\" style={{ display:'flex'}}/>\n            </div>\n        </div>\n    )\n\n\n\n}\n\n\nexport default observer(Loading);\n","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/setting.js",["206","207","208"],"import React, {useEffect, useState} from \"react\"\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport Header, {HelpText, MoreInfo} from \"../componenets/Header\";\nimport {IStore} from \"../stores/InstantStore\";\nimport {Params} from \"../constants/Params\";\nimport {InputNumber, Spin} from \"antd\";\nimport {ReloadOutlined,RightOutlined} from \"@ant-design/icons\";\nimport {observer} from \"mobx-react-lite\";\nimport BLEService from \"../services/BLEService\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Setting = () => {\n    const history = useHistory()\n    const ble = IStore.ble;\n    const params = Params()\n    const usage_params = {\n        distance_unit : params.distance_unit,\n        article_mode : params.article_mode,\n        language : params.language,\n        angle_unit_type : params.angle_unit_type,\n        night_vision_mode : params.night_vision_mode,\n        device_sleep_time : params.device_sleep_time,\n        bluetooth_sleep_time : params.bluetooth_sleep_time,\n        bottom_door_lock : params.bottom_door_lock,\n        top_door_lock : params.top_door_lock,\n        magnetic_declination_angle : params.magnetic_declination_angle\n    }\n\n\n    const [data,setData] = useState(ble.getData())\n    const [device,setDevice] = useState(\"loading\")\n\n    useEffect(()=>{\n        BLEService.event.on(\"monitor\",_setData)\n        controlDevice()\n\n\n        return()=>{\n            BLEService.event.removeListener(\"monitor\",_setData)\n        }\n    },[])\n\n    function _setData({all_data}) {\n        setData({...all_data})\n    }\n\n\n    function reload() {\n        setData({\n            ...data,\n            ...{\n                distance_unit: \"\",\n                article_mode:\"\",\n                language:\"\",\n                angle_unit_type:\"\",\n                night_vision_mode:\"\",\n                device_sleep_time:null,\n                bluetooth_sleep_time:null,\n                bottom_door_lock:0,\n                top_door_lock:0,\n                magnetic_declination_angle:0\n            }\n        })\n\n        controlDevice()\n    }\n\n    async function controlDevice() {\n        const device = ble.getDevice()\n        setDevice(device)\n\n        if(device){\n            getValues()\n        }\n    }\n\n    function getValues() {\n\n        for(let [key,param] of Object.entries(usage_params)){\n            if(param.getHex)\n                ble.sendDataToDevice(key,param.getHex).then(()=>{})\n        }\n    }\n\n\n    if(!device){\n        return (\n            <div className=\"column contain center\">\n                <div style={{ fontSize:20,color:Colors.text,fontWeight:'bold'}}>{string[\"101\"]}</div>\n                <div\n                    onClick={()=>{\n                        history.push(\"select-device\")\n                    }}\n\n                    style={{margin:10, padding:\"10px 15px\", backgroundColor:Colors.primary,borderRadius:10, fontSize:16,color:Colors.text,fontWeight:'bold'}}>{string.simdibaglan}</div>\n            </div>\n\n        )\n    }\n\n    if(device==\"loading\"){\n        return null\n    }\n\n\n\n    return (\n        <div className=\"center contain column\">\n\n            <div className=\"center\" style={{width:'100%'}}>\n                <Header\n                    left={()=><HelpText/>}\n                    right={()=><MoreInfo/>}\n                />\n            </div>\n\n            <div className=\"flex row\"  style={{width:'50%', flexDirection:'space-between', alignItems:'center',fontSize:25,fontWeight:'bold',color:Colors.primary}}>\n                <div className=\"flex-1\"></div>\n                <div className=\"flex-3 center\" style={{textAlign:'center'}}>\n                    {string.ayarlar}\n                </div>\n                <div  className=\"flex-1\" style={{justifyContent:'flex-end'}}>\n                    <div style={{padding:20}} onClick={reload}>\n                        <ReloadOutlined style={{fontSize:20,color:Colors.text}}/>\n                    </div>\n                </div>\n            </div>\n            <div  className=\"flex column scroll\" style={{width:\"100%\" ,height:\"100vh\"}} >\n\n                <div  style={{alignSelf:'center', padding:20,margin:20,borderRadius:10, width:'50%'}}>\n                    {\n                        Object.entries(usage_params).map(([key,{title,setHex=()=>{},options,type,numberParams={}}],index)=>{\n                            const value = data[key]\n\n                            return (\n                                <div\n                                    key={index} className=\"flex row\" style={{zIndex:999, alignItems:'center',justifyContent:'space-between',padding:12,margin:\"15px 0px\",borderRadius:15,backgroundColor:Colors.secondary}}\n                                    onClick={()=>{\n\n                                        if(value){\n\n                                            IStore.setSetModal({\n                                                visible:true,\n                                                title,\n                                                value:value?.id??value,\n                                                type,\n                                                numberParams,\n                                                options:options?Object.values(options):null,\n                                                onChange:async (id)=>{\n                                                    await ble.sendDataToDevice(key,setHex(id))\n                                                    return true;\n                                                }\n                                            })\n                                        }\n                                    }}\n                                >\n                                    <div style={{fontSize:18,fontWeight:'bold',color:Colors.text}}>\n                                        {string[title]}\n                                    </div>\n                                    <div className=\"flex row center\" >\n                                        {\n                                            value?\n                                                <div style={{display:'flex',flex:2,textAlign:'left',color:Colors.text,padding:10,fontSize:16,fontWeight:'bold'}} >{value?.value?(string[value?.value]??value?.value):(numberParams?.fixed?(value/(Math.pow(10,numberParams?.fixed))):value) +\"\"+ (numberParams?.unit?(\" \"+numberParams?.unit):\"\")}</div> :\n                                                <div style={{display:'flex',flex:2,textAlign:'left',padding:10}} ><Spin/></div>\n                                        }\n                                        <RightOutlined style={{fontSize:20,color:Colors.text}} />\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    <div style={{height:100}}/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default observer(Setting)","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/compass.js",["209","210","211","212","213","214","215","216","217","218","219"],"/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/slide.js",["220"],"import React, {useEffect, useState} from \"react\"\nimport {useHistory} from \"react-router-dom\";\nimport {Col} from \"antd\";\nimport Colors from \"../constants/Colors\";\nimport {string} from \"../locales\";\nimport {MStore} from \"../stores/MainStore\";\n\nconst Slide = () => {\n    const history = useHistory()\n    const [page,setPage] = useState(1)\n\n    useEffect(() => {\n        setPage(1)\n    }, []);\n\n    const slide = [\n        {\n            title:\"olcum\",\n            desc:\"olcumdesc\",\n            icon:require(\"../assets/images/olcum.png\").default\n        },\n        {\n            title:\"cihaziyapilandir\",\n            desc:\"cihaziyapilandirdesc\",\n            icon:require(\"../assets/images/cihaz.png\").default\n        },\n        /*{\n            title:\"aygityazilimi\",\n            desc:\"aygityazilimidesc\",\n            icon:require(\"../assets/images/aygit.png\").default\n        },*/\n        {\n            title:\"cihazbagla\",\n            desc:\"cihazbagladesc\",\n            icon:require(\"../assets/images/bagla.png\").default\n        }\n    ]\n\n    const {title,desc,icon} = slide[page-1]\n\n    return (\n        <div  className=\"flex-1 column contain center background-img\" style={{width:'100%', backgroundImage:`url(${require(\"../assets/images/slide-bg/bg1.png\").default})`}}>\n            <div  className=\"flex center background-img \" style={{width:\"50vh\",height:\"50vh\", backgroundImage:`url(${require(\"../assets/images/slide-bg/bg2.png\").default})`}}>\n                <div className=\"flex row center\" style={{marginLeft:'18vw', flexDirection:'space-between'}}>\n                    <div style={{textAlign:'center',padding:'3vw', fontWeight:'bold',fontSize:\"4vh\",color:Colors.white}}>{string[title]}</div>\n                   <div className=\"flex center\" style={{padding:\"4vh\",borderRadius:1000,backgroundColor:Colors.primary}}>\n                       <img src={icon} alt={title} style={{width:\"6vh\",height:\"6vh\"}}/>\n                   </div>\n                </div>\n            </div>\n            <div style={{width:'50%', textAlign:'center', fontWeight:'500',fontSize:\"2vh\",color:Colors.text}}>{string[desc]}</div>\n            <div className=\"flex row center\" style={{marginTop:\"4vh\",}} >\n                {\n                    slide.map((_,index)=>\n                        <div key={index} style={{margin:10, width:\"10vw\",height:10,borderRadius:10,backgroundColor:page>=(index+1)?Colors.primary:Colors.lightBlack}}/>\n                    )\n                }\n            </div>\n            <div\n                onClick={()=>{\n                    if(page<slide.length){\n                        setPage(page+1)\n                    }else{\n                        MStore.setFirst(false)\n                        history.goBack()\n                    }\n                }}\n\n                className=\"flex center\" style={{marginTop:\"3vh\", padding:\"1vh 7vh\",borderRadius:15,backgroundColor:Colors.primary}}>\n                <div style={{textAlign:'center',fontWeight:'500',fontSize:\"2vh\",color:Colors.white}}>{string[\"devamet\"]}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Slide","/Users/adamoglu/Documents/Projeler/AselsanLazer/aselsan-lazer-desktop-app/src/pages/moreInfo.js",["221","222","223"],"import React, {useEffect, useState} from \"react\"\nimport {useHistory} from \"react-router-dom\";\nimport {observer} from \"mobx-react-lite\";\nimport Header, {HelpText, MoreInfoButton} from \"../componenets/Header\";\nimport {string} from \"../locales\";\nimport Colors from \"../constants/Colors\";\nimport { RightOutlined} from \"@ant-design/icons\";\n\nimport {contacts, findType, HomeScreenTypes} from \"../constants/Config\";\nimport {MStore} from \"../stores/MainStore\";\nimport {Modal, Switch} from \"antd\";\nimport {IStore} from \"../stores/InstantStore\";\nimport {setModalTypes} from \"../componenets/SetModal\";\nimport useStayAwake from \"use-stay-awake\";\n\n\nconst MoreInfo = () => {\n    const history = useHistory()\n    const device = useStayAwake();\n\n\n    const [visible,setVisible] = useState(false)\n\n    const {home_screen_type,lock_screen} = MStore.settings\n\n    function Contact() {\n        return(\n            <Modal\n                bodyStyle={{padding:0, backgroundColor:Colors.darkGray}}\n                centered\n                closable={false}\n                visible={visible}\n                okText={string.kaydet}\n                cancelText={string.kapat}\n                onOk={()=>{setVisible(false)}}\n                onCancel={()=>{setVisible(false)}}\n                footer={null}\n            >\n                <div style={{width:'100%'}}>\n                    <div\n                        style={{width:'100%', display:'flex',justifyContent:'flex-end'}}\n                    >\n                        <div className=\"background-img\" style={{display:'flex', width:60,height:55,backgroundImage:`url(${require(\"../assets/images/modal/corner.png\").default})`}}  >\n                            <div style={{marginLeft:20,marginBottom:10}} className=\"flex-1 center\">\n                                <img src={require(\"../assets/images/modal/iletisim.png\").default} height={25} width={25} />\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{padding:15}}>\n                        <div style={{fontSize:18,fontWeight:'bold',color:Colors.primary,textAlign:'center'}} >{string[\"bizeulasin\"]}</div>\n                    </div>\n                    <div className=\"flex center row\" style={{display:'grid', width:'100%',padding:10}}>\n                        {\n                            Object.values(contacts).map(({title,value,onPress},index)=>\n                                <div key={index} style={{cursor:'pointer', display:'flex', }} onClick={()=>{onPress(value.replace(/ /g, ''))}}>\n                                    <div style={{padding:10}}>\n                                        <div  style={{fontSize:18,fontWeight:'bold',color:Colors.white}}>{string[title]+\": \"+value}</div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n\n                    <div className={\"flex row\"} style={{padding:15, width:'100%',margin:\"40px 0\",alignItems:'center',justifyContent:'space-around'}}>\n                        <div className=\"flex-1 center\">\n                            <div\n                                style={{fontSize:18,color:Colors.primary,fontWeight:'bold', padding:10}}\n                                onClick={()=>{setVisible(false)}}\n                            >\n                                {string.kapat}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        )\n    }\n\n    return (\n        <div  className=\"flex-1 column contain center\" >\n            <Contact/>\n            <div className=\"center\" style={{width:'100%'}}>\n                <Header\n                    onBack={()=>{\n                        history.goBack()\n                    }}\n                    right={()=><MoreInfoButton close/>}\n                />\n            </div>\n            <div className=\"flex row\"  style={{fontSize:25,fontWeight:'bold',color:Colors.primary}}>\n                {string.dahafazla}\n            </div>\n            <div className=\"flex-1 scroll column\" style={{width:'100%',alignItems:'center'}} >\n\n                <div\n                    className=\"flex row\" style={{ width:'50%',alignItems:'center',justifyContent:'space-between',padding:12,margin:\"20px 0px\",borderRadius:15,backgroundColor:Colors.secondary}}\n                    onClick={()=>{\n                        IStore.setSetModal({\n                            visible:true,\n                            title:string[\"olcumonceligi\"],\n                            value:home_screen_type,\n                            type:setModalTypes.Select,\n                            options:Object.values(HomeScreenTypes),\n                            icon:require(\"../assets/images/modal/oncelik.png\"),\n                            onChange:async (id)=>{\n                                MStore.setSettings({...MStore.settings, home_screen_type:id})\n                            }\n                        })\n                    }}\n                >\n                    <div style={{fontSize:18,fontWeight:'bold',color:Colors.text}}>\n                        {string[\"olcumonceligi\"]}\n                    </div>\n                    <div className=\"flex row center\" >\n                        <div style={{display:'flex',flex:2,textAlign:'left',color:Colors.text,padding:10,fontSize:15}} >{string[findType(HomeScreenTypes,home_screen_type)]}</div>\n                        <RightOutlined style={{fontSize:20,color:Colors.text}} />\n                    </div>\n                </div>\n                <div\n                    className=\"flex row\" style={{ borderBottomStyle:'dashed', borderBottomWidth:3,borderRadius:2,borderColor:'#667587',  width:'50%',alignItems:'center',justifyContent:'space-between',padding:12,margin:\"15px 0px\"}}\n                >\n                    <div style={{fontSize:18,fontWeight:'bold',color:Colors.text}}>\n                        {string[\"ekranklidiniengelle\"]}\n                    </div>\n                    <div >\n                        <Switch defaultChecked={lock_screen} onChange={(lock_screen)=>{\n                            MStore.setSettings({...MStore.settings,lock_screen})\n                            if(lock_screen){\n                                device.preventSleeping();\n                            }else{\n                                device.allowSleeping();\n                            }\n                        }} />\n                    </div>\n                </div>\n                <div\n                    className=\"flex row\" style={{ width:'50%',alignItems:'center',justifyContent:'space-between',padding:12,margin:\"20px 0px\",borderRadius:15,backgroundColor:Colors.secondary}}\n                    onClick={()=>{\n                        history.push(\"select-device\")\n                    }}\n                >\n                    <div style={{fontSize:18,fontWeight:'bold',color:Colors.text}}>\n                        {string[\"cihazabaglan\"]}\n                    </div>\n                    <div className=\"flex row center\" >\n                        <RightOutlined style={{fontSize:20,color:Colors.text}} />\n                    </div>\n                </div>\n                <div\n                    className=\"flex row\" style={{ width:'50%',alignItems:'center',justifyContent:'space-between',padding:12,margin:\"20px 0px\",borderRadius:15,backgroundColor:Colors.secondary}}\n                    onClick={()=>{\n                        setVisible(true)\n                    }}\n                >\n                    <div style={{fontSize:18,fontWeight:'bold',color:Colors.text}}>\n                        {string[\"hakkinda\"]}\n                    </div>\n                    <div className=\"flex row center\" >\n                        <RightOutlined style={{fontSize:20,color:Colors.text}} />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default observer(MoreInfo)",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":22,"column":7,"nodeType":"230","endLine":22,"endColumn":9,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":1,"column":1,"nodeType":"234","endLine":15,"endColumn":3},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":35},{"ruleId":"235","severity":1,"message":"239","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":27,"column":25,"nodeType":"242","messageId":"243","endLine":27,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":29,"column":29,"nodeType":"242","messageId":"243","endLine":29,"endColumn":31},{"ruleId":"240","severity":1,"message":"241","line":31,"column":33,"nodeType":"242","messageId":"243","endLine":31,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":33,"column":37,"nodeType":"242","messageId":"243","endLine":33,"endColumn":39},{"ruleId":"244","severity":1,"message":"245","line":68,"column":90,"nodeType":"246","endLine":68,"endColumn":220},{"ruleId":"240","severity":1,"message":"241","line":68,"column":160,"nodeType":"242","messageId":"243","endLine":68,"endColumn":162},{"ruleId":"244","severity":1,"message":"245","line":69,"column":90,"nodeType":"246","endLine":69,"endColumn":222},{"ruleId":"240","severity":1,"message":"241","line":69,"column":163,"nodeType":"242","messageId":"243","endLine":69,"endColumn":165},{"ruleId":"244","severity":1,"message":"245","line":70,"column":105,"nodeType":"246","endLine":70,"endColumn":252},{"ruleId":"240","severity":1,"message":"241","line":70,"column":185,"nodeType":"242","messageId":"243","endLine":70,"endColumn":187},{"ruleId":"244","severity":1,"message":"245","line":71,"column":100,"nodeType":"246","endLine":71,"endColumn":231},{"ruleId":"240","severity":1,"message":"241","line":71,"column":172,"nodeType":"242","messageId":"243","endLine":71,"endColumn":174},{"ruleId":"244","severity":1,"message":"245","line":29,"column":17,"nodeType":"246","endLine":29,"endColumn":149},{"ruleId":"235","severity":1,"message":"247","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":23,"column":17,"nodeType":"246","endLine":23,"endColumn":128},{"ruleId":"244","severity":1,"message":"245","line":34,"column":13,"nodeType":"246","endLine":34,"endColumn":104},{"ruleId":"228","severity":1,"message":"248","line":39,"column":7,"nodeType":"230","endLine":39,"endColumn":9,"suggestions":"249"},{"ruleId":"240","severity":1,"message":"241","line":124,"column":14,"nodeType":"242","messageId":"243","endLine":124,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":35,"column":30,"nodeType":"242","messageId":"243","endLine":35,"endColumn":32},{"ruleId":"240","severity":1,"message":"241","line":368,"column":53,"nodeType":"242","messageId":"243","endLine":368,"endColumn":55},{"ruleId":"250","severity":1,"message":"251","line":123,"column":7,"nodeType":"252","messageId":"253","endLine":123,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":150,"column":5,"nodeType":"256","messageId":"257","endLine":169,"endColumn":7},{"ruleId":"240","severity":1,"message":"241","line":177,"column":25,"nodeType":"242","messageId":"243","endLine":177,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":178,"column":7,"nodeType":"252","messageId":"253","endLine":178,"endColumn":26},{"ruleId":"235","severity":1,"message":"258","line":45,"column":12,"nodeType":"237","messageId":"238","endLine":45,"endColumn":19},{"ruleId":"235","severity":1,"message":"259","line":45,"column":20,"nodeType":"237","messageId":"238","endLine":45,"endColumn":30},{"ruleId":"235","severity":1,"message":"260","line":46,"column":12,"nodeType":"237","messageId":"238","endLine":46,"endColumn":19},{"ruleId":"235","severity":1,"message":"261","line":46,"column":20,"nodeType":"237","messageId":"238","endLine":46,"endColumn":30},{"ruleId":"235","severity":1,"message":"262","line":48,"column":12,"nodeType":"237","messageId":"238","endLine":48,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":95,"column":19,"nodeType":"242","messageId":"243","endLine":95,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":95,"column":33,"nodeType":"242","messageId":"243","endLine":95,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":95,"column":49,"nodeType":"242","messageId":"243","endLine":95,"endColumn":51},{"ruleId":"244","severity":1,"message":"245","line":182,"column":17,"nodeType":"246","endLine":182,"endColumn":181},{"ruleId":"240","severity":1,"message":"241","line":278,"column":81,"nodeType":"242","messageId":"243","endLine":278,"endColumn":83},{"ruleId":"244","severity":1,"message":"245","line":289,"column":49,"nodeType":"246","endLine":289,"endColumn":151},{"ruleId":"244","severity":1,"message":"245","line":294,"column":49,"nodeType":"246","endLine":294,"endColumn":149},{"ruleId":"244","severity":1,"message":"245","line":299,"column":49,"nodeType":"246","endLine":299,"endColumn":149},{"ruleId":"244","severity":1,"message":"245","line":317,"column":49,"nodeType":"246","endLine":317,"endColumn":154},{"ruleId":"244","severity":1,"message":"245","line":330,"column":21,"nodeType":"246","endLine":330,"endColumn":111},{"ruleId":"240","severity":1,"message":"241","line":11,"column":21,"nodeType":"242","messageId":"243","endLine":11,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":11,"column":63,"nodeType":"242","messageId":"243","endLine":11,"endColumn":65},{"ruleId":"240","severity":1,"message":"241","line":13,"column":27,"nodeType":"242","messageId":"243","endLine":13,"endColumn":29},{"ruleId":"240","severity":1,"message":"241","line":13,"column":68,"nodeType":"242","messageId":"243","endLine":13,"endColumn":70},{"ruleId":"240","severity":1,"message":"263","line":33,"column":21,"nodeType":"242","messageId":"243","endLine":33,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":33,"column":61,"nodeType":"242","messageId":"243","endLine":33,"endColumn":63},{"ruleId":"240","severity":1,"message":"241","line":202,"column":32,"nodeType":"242","messageId":"243","endLine":202,"endColumn":34},{"ruleId":"240","severity":1,"message":"241","line":207,"column":36,"nodeType":"242","messageId":"243","endLine":207,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":212,"column":26,"nodeType":"242","messageId":"243","endLine":212,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":57,"column":37,"nodeType":"246","endLine":57,"endColumn":86},{"ruleId":"240","severity":1,"message":"241","line":72,"column":29,"nodeType":"242","messageId":"243","endLine":72,"endColumn":31},{"ruleId":"240","severity":1,"message":"241","line":81,"column":33,"nodeType":"242","messageId":"243","endLine":81,"endColumn":35},{"ruleId":"240","severity":1,"message":"241","line":111,"column":40,"nodeType":"242","messageId":"243","endLine":111,"endColumn":42},{"ruleId":"240","severity":1,"message":"263","line":122,"column":43,"nodeType":"242","messageId":"243","endLine":122,"endColumn":45},{"ruleId":"240","severity":1,"message":"263","line":129,"column":43,"nodeType":"242","messageId":"243","endLine":129,"endColumn":45},{"ruleId":"240","severity":1,"message":"241","line":172,"column":125,"nodeType":"242","messageId":"243","endLine":172,"endColumn":127},{"ruleId":"240","severity":1,"message":"241","line":174,"column":45,"nodeType":"242","messageId":"243","endLine":174,"endColumn":47},{"ruleId":"240","severity":1,"message":"241","line":175,"column":109,"nodeType":"242","messageId":"243","endLine":175,"endColumn":111},{"ruleId":"240","severity":1,"message":"241","line":176,"column":109,"nodeType":"242","messageId":"243","endLine":176,"endColumn":111},{"ruleId":"240","severity":1,"message":"241","line":196,"column":20,"nodeType":"242","messageId":"243","endLine":196,"endColumn":22},{"ruleId":"235","severity":1,"message":"264","line":3,"column":9,"nodeType":"237","messageId":"238","endLine":3,"endColumn":15},{"ruleId":"235","severity":1,"message":"265","line":4,"column":17,"nodeType":"237","messageId":"238","endLine":4,"endColumn":25},{"ruleId":"235","severity":1,"message":"266","line":4,"column":27,"nodeType":"237","messageId":"238","endLine":4,"endColumn":35},{"ruleId":"235","severity":1,"message":"247","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"267","line":7,"column":9,"nodeType":"237","messageId":"238","endLine":7,"endColumn":20},{"ruleId":"228","severity":1,"message":"248","line":43,"column":7,"nodeType":"230","endLine":43,"endColumn":9,"suggestions":"268"},{"ruleId":"240","severity":1,"message":"241","line":103,"column":14,"nodeType":"242","messageId":"243","endLine":103,"endColumn":16},{"ruleId":"235","severity":1,"message":"269","line":7,"column":25,"nodeType":"237","messageId":"238","endLine":7,"endColumn":40},{"ruleId":"235","severity":1,"message":"270","line":17,"column":31,"nodeType":"237","messageId":"238","endLine":17,"endColumn":40},{"ruleId":"228","severity":1,"message":"271","line":57,"column":7,"nodeType":"230","endLine":57,"endColumn":9,"suggestions":"272"},{"ruleId":"240","severity":1,"message":"241","line":104,"column":177,"nodeType":"242","messageId":"243","endLine":104,"endColumn":179},{"ruleId":"240","severity":1,"message":"241","line":104,"column":186,"nodeType":"242","messageId":"243","endLine":104,"endColumn":188},{"ruleId":"240","severity":1,"message":"241","line":104,"column":195,"nodeType":"242","messageId":"243","endLine":104,"endColumn":197},{"ruleId":"244","severity":1,"message":"245","line":127,"column":31,"nodeType":"246","endLine":127,"endColumn":183},{"ruleId":"244","severity":1,"message":"245","line":163,"column":47,"nodeType":"246","endLine":163,"endColumn":142},{"ruleId":"244","severity":1,"message":"245","line":178,"column":31,"nodeType":"246","endLine":178,"endColumn":183},{"ruleId":"244","severity":1,"message":"245","line":211,"column":47,"nodeType":"246","endLine":211,"endColumn":142},{"ruleId":"244","severity":1,"message":"245","line":248,"column":47,"nodeType":"246","endLine":248,"endColumn":142},{"ruleId":"235","severity":1,"message":"273","line":3,"column":9,"nodeType":"237","messageId":"238","endLine":3,"endColumn":12},{"ruleId":"235","severity":1,"message":"247","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"265","line":4,"column":17,"nodeType":"237","messageId":"238","endLine":4,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":45,"column":33,"nodeType":"246","endLine":45,"endColumn":124},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'controlData'. Either include it or remove the dependency array.","ArrayExpression",["276"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'controlDevice'. Either include it or remove the dependency array.",["277"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'heading' is assigned a value but never used.","'setHeading' is assigned a value but never used.","'compass' is assigned a value but never used.","'setCompass' is assigned a value but never used.","'loading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'string' is defined but never used.","'HelpText' is defined but never used.","'MoreInfo' is defined but never used.","'InputNumber' is defined but never used.",["278"],"'HomeScreenTypes' is defined but never used.","'useSwiper' is defined but never used.","React Hook useEffect has missing dependencies: '_setData', 'auto', and 'controlDevice'. Either include them or remove the dependency array.",["279"],"'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [controlData]",{"range":"287","text":"288"},"Update the dependencies array to be: [controlDevice]",{"range":"289","text":"290"},{"range":"291","text":"290"},"Update the dependencies array to be: [_setData, auto, controlDevice]",{"range":"292","text":"293"},[518,520],"[controlData]",[1192,1194],"[controlDevice]",[1483,1485],[1801,1803],"[_setData, auto, controlDevice]"]