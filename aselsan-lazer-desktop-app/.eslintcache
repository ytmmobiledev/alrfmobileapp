[{"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/index.js":"1","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/App.js":"2","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/selectDevice.js":"3","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/tabs.js":"4","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/compass.js":"5","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/slide.js":"6","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/Loading.js":"7","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/moreInfo.js":"8","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/SetModal.tsx":"9","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/Header.js":"10","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/measure.js":"11","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/device.js":"12","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/laserMeter.js":"13","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/setting.js":"14","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Colors.ts":"15","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/stores/InstantStore.ts":"16","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/stores/MainStore.ts":"17","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Config.ts":"18","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Params.ts":"19","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/services/BLEService.ts":"20","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/toast.tsx":"21","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/Conversions.tsx":"22","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/findLocation.tsx":"23","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/cMoment.tsx":"24","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/Buffer.tsx":"25","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/findData.tsx":"26","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/index.ts":"27","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/en.ts":"28","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/tr.ts":"29","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/services/QueueService.ts":"30","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/AES.tsx":"31"},{"size":1548,"mtime":1671088857304,"results":"32","hashOfConfig":"33"},{"size":1124,"mtime":1671088834865,"results":"34","hashOfConfig":"33"},{"size":3811,"mtime":1671096916720,"results":"35","hashOfConfig":"33"},{"size":4020,"mtime":1658487976834,"results":"36","hashOfConfig":"33"},{"size":16001,"mtime":1671096943321,"results":"37","hashOfConfig":"33"},{"size":3670,"mtime":1658500418930,"results":"38","hashOfConfig":"33"},{"size":922,"mtime":1658488959424,"results":"39","hashOfConfig":"33"},{"size":8452,"mtime":1671096556877,"results":"40","hashOfConfig":"33"},{"size":9456,"mtime":1671096916700,"results":"41","hashOfConfig":"33"},{"size":2737,"mtime":1671096454013,"results":"42","hashOfConfig":"33"},{"size":1647,"mtime":1658487702603,"results":"43","hashOfConfig":"33"},{"size":8013,"mtime":1671086859139,"results":"44","hashOfConfig":"33"},{"size":25778,"mtime":1671097299744,"results":"45","hashOfConfig":"33"},{"size":11306,"mtime":1671094283236,"results":"46","hashOfConfig":"33"},{"size":331,"mtime":1671095786032,"results":"47","hashOfConfig":"33"},{"size":1622,"mtime":1671046005206,"results":"48","hashOfConfig":"33"},{"size":819,"mtime":1671090030582,"results":"49","hashOfConfig":"33"},{"size":6361,"mtime":1671095476806,"results":"50","hashOfConfig":"33"},{"size":8182,"mtime":1671050789754,"results":"51","hashOfConfig":"33"},{"size":4586,"mtime":1671096916730,"results":"52","hashOfConfig":"33"},{"size":511,"mtime":1658402677691,"results":"53","hashOfConfig":"33"},{"size":1150,"mtime":1658402677691,"results":"54","hashOfConfig":"33"},{"size":2160,"mtime":1671088889952,"results":"55","hashOfConfig":"33"},{"size":242,"mtime":1658402677691,"results":"56","hashOfConfig":"33"},{"size":211,"mtime":1658402677690,"results":"57","hashOfConfig":"33"},{"size":8928,"mtime":1671089375172,"results":"58","hashOfConfig":"33"},{"size":499,"mtime":1658402677692,"results":"59","hashOfConfig":"33"},{"size":5213,"mtime":1671087984918,"results":"60","hashOfConfig":"33"},{"size":5415,"mtime":1671087958435,"results":"61","hashOfConfig":"33"},{"size":7668,"mtime":1671087103269,"results":"62","hashOfConfig":"33"},{"size":648,"mtime":1671045381450,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ok1vxa",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/index.js",[],["143","144"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/App.js",["145"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Colors from \"./constants/Colors\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spin } from \"antd\";\nimport { IStore } from \"./stores/InstantStore\";\nimport { MStore } from \"./stores/MainStore\";\nimport useStayAwake from \"use-stay-awake\";\n\nfunction App() {\n  const history = useHistory();\n  const device = useStayAwake();\n\n  const ble = IStore.ble;\n  useEffect(() => {\n    setTimeout(() => {\n      controlData();\n    }, 1000);\n  }, []);\n\n  function controlData() {\n    if (MStore.settings.lock_screen) {\n      device.preventSleeping();\n    } else {\n      device.allowSleeping();\n    }\n\n    if (MStore.first) {\n      history.push(\"slide\");\n    } else {\n      let device = ble.getDevice();\n\n      if (device) {\n        history.push(\"tabs\");\n      } else {\n        history.push(\"select-device\");\n      }\n    }\n  }\n\n  return (\n    <div\n      className=\"contain\"\n      style={{\n        backgroundColor: Colors.darkGray,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Spin />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/selectDevice.js",["146","147"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/tabs.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { useEffect, useState } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { string } from \"../locales\";\nimport Measure from \"./measure\";\nimport Device from \"./device\";\nimport LaserMeter from \"./laserMeter\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { observer } from \"mobx-react-lite\";\nimport Setting from \"./setting\";\nimport { ipcRenderer } from \"electron\";\n\nconst Tabs = () => {\n  const page = IStore.tab_index;\n\n  return (\n    <div\n      style={{\n        backgroundColor: Colors.darkGray,\n        height: \"100vh\",\n        width: \"100%\",\n      }}\n    >\n      <div>\n        {page == \"olcum\" ? (\n          <Measure />\n        ) : page == \"cihaz\" ? (\n          <Device />\n        ) : page == \"yapilandirici\" ? (\n          <Setting />\n        ) : page == \"lazer\" ? (\n          <LaserMeter />\n        ) : null}\n      </div>\n      <div style={{ position: \"fixed\", bottom: 0, left: 0, right: 0 }}>\n        <BottomNavigation\n          showLabels\n          value={page}\n          sx={{\n            p: 5,\n            bgcolor: Colors.primary,\n            \"& .MuiBottomNavigationAction-label\": {\n              filter: \"opacity(0.4)\",\n              color: Colors.white,\n              fontSize: (theme) => theme.typography.caption,\n              transition: \"none\",\n              fontWeight: \"bold\",\n              lineHeight: \"20px\",\n            },\n            \"& .Mui-selected\": {\n              \"& .MuiBottomNavigationAction-label\": {\n                filter: \"none\",\n                color: Colors.white,\n                fontSize: (theme) => theme.typography.caption,\n                transition: \"none\",\n                fontWeight: \"bold\",\n                lineHeight: \"20px\",\n              },\n            },\n          }}\n          onChange={(event, newValue) => {\n            IStore.setTabIndex(newValue);\n          }}\n        >\n          <BottomNavigationAction\n            className=\"btn\"\n            value={\"olcum\"}\n            label={string.olcum2}\n            icon={\n              <img\n                src={require(\"../assets/images/goz.png\").default}\n                style={{\n                  ...(page == \"olcum\" ? {} : { filter: \"opacity(0.4)\" }),\n                  width: 30,\n                  height: 30,\n                }}\n              />\n            }\n          />\n          <BottomNavigationAction\n            className=\"btn\"\n            value={\"cihaz\"}\n            label={string.cihaz2}\n            icon={\n              <img\n                src={require(\"../assets/images/cihaz2.png\").default}\n                style={{\n                  ...(page == \"cihaz\" ? {} : { filter: \"opacity(0.4)\" }),\n                  width: 30,\n                  height: 30,\n                }}\n              />\n            }\n          />\n          <BottomNavigationAction\n            className=\"btn\"\n            value={\"yapilandirici\"}\n            label={string.yapilandirici}\n            icon={\n              <img\n                src={require(\"../assets/images/yapilandirici.png\").default}\n                style={{\n                  ...(page == \"yapilandirici\"\n                    ? {}\n                    : { filter: \"opacity(0.4)\" }),\n                  width: 30,\n                  height: 30,\n                }}\n              />\n            }\n          />\n          <BottomNavigationAction\n            className=\"btn\"\n            value={\"lazer\"}\n            label={string.lazermesafeolcer}\n            icon={\n              <img\n                src={require(\"../assets/images/lazer.png\").default}\n                style={{\n                  ...(page == \"lazer\" ? {} : { filter: \"opacity(0.4)\" }),\n                  width: 30,\n                  height: 30,\n                }}\n              />\n            }\n          />\n        </BottomNavigation>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Tabs);\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/compass.js",["164","165","166","167","168","169","170","171","172","173","174"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/slide.js",["175"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Col } from \"antd\";\nimport Colors from \"../constants/Colors\";\nimport { string } from \"../locales\";\nimport { MStore } from \"../stores/MainStore\";\n\nconst Slide = () => {\n  const history = useHistory();\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    setPage(1);\n  }, []);\n\n  const slide = [\n    {\n      title: \"olcum\",\n      desc: \"olcumdesc\",\n      icon: require(\"../assets/images/olcum.png\").default,\n    },\n    {\n      title: \"cihaziyapilandir\",\n      desc: \"cihaziyapilandirdesc\",\n      icon: require(\"../assets/images/cihaz.png\").default,\n    },\n    /*{\n            title:\"aygityazilimi\",\n            desc:\"aygityazilimidesc\",\n            icon:require(\"../assets/images/aygit.png\").default\n        },*/\n    {\n      title: \"cihazbagla\",\n      desc: \"cihazbagladesc\",\n      icon: require(\"../assets/images/bagla.png\").default,\n    },\n  ];\n\n  const { title, desc, icon } = slide[page - 1];\n\n  return (\n    <div\n      className=\"flex-1 column contain center background-img\"\n      style={{\n        width: \"100%\",\n        backgroundImage: `url(${\n          require(\"../assets/images/slide-bg/bg1.png\").default\n        })`,\n      }}\n    >\n      <div\n        className=\"flex center background-img \"\n        style={{\n          width: \"50vh\",\n          height: \"50vh\",\n          backgroundImage: `url(${\n            require(\"../assets/images/slide-bg/bg2.png\").default\n          })`,\n        }}\n      >\n        <div\n          className=\"flex row center\"\n          style={{ marginLeft: \"18vw\", flexDirection: \"space-between\" }}\n        >\n          <div\n            style={{\n              textAlign: \"center\",\n              padding: \"3vw\",\n              fontWeight: \"bold\",\n              fontSize: \"4vh\",\n              color: Colors.white,\n            }}\n          >\n            {string[title]}\n          </div>\n          <div\n            className=\"flex center\"\n            style={{\n              padding: \"4vh\",\n              borderRadius: 1000,\n              backgroundColor: Colors.primary,\n            }}\n          >\n            <img\n              src={icon}\n              alt={title}\n              style={{ width: \"6vh\", height: \"6vh\" }}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          width: \"50%\",\n          textAlign: \"center\",\n          fontWeight: \"500\",\n          fontSize: \"2vh\",\n          color: Colors.text,\n        }}\n      >\n        {string[desc]}\n      </div>\n      <div className=\"flex row center\" style={{ marginTop: \"4vh\" }}>\n        {slide.map((_, index) => (\n          <div\n            key={index}\n            style={{\n              margin: 10,\n              width: \"10vw\",\n              height: 10,\n              borderRadius: 10,\n              backgroundColor:\n                page >= index + 1 ? Colors.primary : Colors.lightBlack,\n            }}\n          />\n        ))}\n      </div>\n      <div\n        onClick={() => {\n          if (page < slide.length) {\n            setPage(page + 1);\n          } else {\n            MStore.setFirst(false);\n            history.push(\"/\");\n          }\n        }}\n        className=\"flex center btn\"\n        style={{\n          marginTop: \"3vh\",\n          padding: \"1vh 7vh\",\n          borderRadius: 15,\n          backgroundColor: Colors.primary,\n        }}\n      >\n        <div\n          style={{\n            textAlign: \"center\",\n            fontWeight: \"500\",\n            fontSize: \"2vh\",\n            color: Colors.white,\n          }}\n        >\n          {string[\"devamet\"]}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slide;\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/Loading.js",["176"],"import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport Colors from \"../constants/Colors\";\nimport { Spin } from \"antd\";\nimport { IStore } from \"../stores/InstantStore\";\n\nconst Loading = () => {\n  if (!IStore.loading) return null;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100vh\",\n        zIndex: 9999,\n        flex: 1,\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div\n        className=\"center\"\n        style={{\n          border: `4px solid ${Colors.primary}`,\n          width: 80,\n          height: 80,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 1000,\n        }}\n      >\n        <Spin size=\"large\" style={{ display: \"flex\" }} />\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Loading);\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/moreInfo.js",["177"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport Header, { MoreInfoButton } from \"../componenets/Header\";\nimport { string } from \"../locales\";\nimport Colors from \"../constants/Colors\";\nimport { RightOutlined } from \"@ant-design/icons\";\n\nimport { contacts, findType, HomeScreenTypes } from \"../constants/Config\";\nimport { MStore } from \"../stores/MainStore\";\nimport { Modal, Switch } from \"antd\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { setModalTypes } from \"../componenets/SetModal\";\nimport useStayAwake from \"use-stay-awake\";\n\nexport function Contact({ onClose = () => {} }) {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <div\n          className=\"background-img\"\n          style={{\n            display: \"flex\",\n            width: 60,\n            height: 55,\n            backgroundImage: `url(${\n              require(\"../assets/images/modal/corner.png\").default\n            })`,\n          }}\n        >\n          <div\n            style={{ marginLeft: 20, marginBottom: 10 }}\n            className=\"flex-1 center\"\n          >\n            <img\n              src={require(\"../assets/images/modal/iletisim.png\").default}\n              height={25}\n              width={25}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ padding: 15 }}>\n        <div\n          style={{\n            fontSize: 18,\n            fontWeight: \"bold\",\n            color: Colors.primary,\n            textAlign: \"center\",\n          }}\n        >\n          {string[\"bizeulasin\"]}\n        </div>\n      </div>\n      <div\n        className=\"flex center row\"\n        style={{ display: \"grid\", width: \"100%\", padding: 10 }}\n      >\n        {Object.values(contacts).map(({ title, value, onPress }, index) => (\n          <div\n            key={index}\n            style={{ cursor: \"pointer\", display: \"flex\" }}\n            onClick={() => {\n              onPress(value.replace(/ /g, \"\"));\n            }}\n          >\n            <div style={{ padding: 10 }}>\n              <div\n                style={{\n                  color: Colors.white,\n                  fontSize: 16,\n                }}\n              >\n                <b style={{ color: Colors.lightPrimary, fontSize: 19 }}>\n                  {string[title]}\n                </b>\n                <span>{\" : \" + value}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div\n        className={\"flex row\"}\n        style={{\n          padding: 15,\n          width: \"100%\",\n          margin: \"40px 0\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <div className=\"flex-1 center\">\n          <div\n            className=\"btn\"\n            style={{\n              fontSize: 18,\n              color: Colors.primary,\n              fontWeight: \"bold\",\n              padding: 10,\n            }}\n            onClick={() => {\n              onClose();\n            }}\n          >\n            {string.kapat}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst MoreInfo = () => {\n  const history = useHistory();\n  const device = useStayAwake();\n\n  const [visible, setVisible] = useState(false);\n\n  const { home_screen_type, lock_screen } = MStore.settings;\n\n  function ContactModal() {\n    return (\n      <Modal\n        bodyStyle={{ padding: 0, backgroundColor: Colors.darkGray }}\n        centered\n        closable={false}\n        visible={visible}\n        okText={string.kaydet}\n        cancelText={string.kapat}\n        onOk={() => {\n          setVisible(false);\n        }}\n        onCancel={() => {\n          setVisible(false);\n        }}\n        footer={null}\n      >\n        <Contact onClose={() => setVisible(false)} />\n      </Modal>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 column contain center\">\n      <ContactModal />\n      <div className=\"center\" style={{ width: \"100%\" }}>\n        <Header\n          onBack={() => {\n            history.goBack();\n          }}\n          right={() => <MoreInfoButton close />}\n        />\n      </div>\n      <div\n        className=\"flex row\"\n        style={{ fontSize: 25, fontWeight: \"bold\", color: Colors.primary }}\n      >\n        {string.dahafazla}\n      </div>\n      <div\n        className=\"flex-1 scroll column\"\n        style={{ width: \"100%\", alignItems: \"center\" }}\n      >\n        <div\n          className=\"flex row btn\"\n          style={{\n            width: \"50%\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 12,\n            margin: \"20px 0px\",\n            borderRadius: 15,\n            backgroundColor: Colors.secondary,\n          }}\n          onClick={() => {\n            IStore.setSetModal({\n              visible: true,\n              title: string[\"olcumonceligi\"],\n              value: home_screen_type,\n              type: setModalTypes.Select,\n              options: Object.values(HomeScreenTypes),\n              icon: require(\"../assets/images/modal/oncelik.png\"),\n              onChange: async (id) => {\n                MStore.setSettings({\n                  ...MStore.settings,\n                  home_screen_type: id,\n                });\n              },\n            });\n          }}\n        >\n          <div style={{ fontSize: 18, fontWeight: \"bold\", color: Colors.text }}>\n            {string[\"olcumonceligi\"]}\n          </div>\n          <div className=\"flex row center\">\n            <div\n              style={{\n                display: \"flex\",\n                flex: 2,\n                textAlign: \"left\",\n                color: Colors.text,\n                padding: 10,\n                fontSize: 15,\n              }}\n            >\n              {string[findType(HomeScreenTypes, home_screen_type)]}\n            </div>\n            <RightOutlined style={{ fontSize: 20, color: Colors.text }} />\n          </div>\n        </div>\n        <div\n          className=\"flex row\"\n          style={{\n            borderBottomStyle: \"dashed\",\n            borderBottomWidth: 3,\n            borderRadius: 2,\n            borderColor: \"#667587\",\n            width: \"50%\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 12,\n            margin: \"15px 0px\",\n          }}\n        >\n          <div style={{ fontSize: 18, fontWeight: \"bold\", color: Colors.text }}>\n            {string[\"ekranklidiniengelle\"]}\n          </div>\n          <div>\n            <Switch\n              defaultChecked={lock_screen}\n              onChange={(lock_screen) => {\n                MStore.setSettings({ ...MStore.settings, lock_screen });\n                if (lock_screen) {\n                  device.preventSleeping();\n                } else {\n                  device.allowSleeping();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className=\"flex row btn\"\n          style={{\n            width: \"50%\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 12,\n            margin: \"20px 0px\",\n            borderRadius: 15,\n            backgroundColor: Colors.secondary,\n          }}\n          onClick={() => {\n            history.push(\"select-device\");\n          }}\n        >\n          <div style={{ fontSize: 18, fontWeight: \"bold\", color: Colors.text }}>\n            {string[\"cihazabaglan\"]}\n          </div>\n          <div className=\"flex row center\">\n            <RightOutlined style={{ fontSize: 20, color: Colors.text }} />\n          </div>\n        </div>\n        <div\n          className=\"flex row btn\"\n          style={{\n            width: \"50%\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            padding: 12,\n            margin: \"20px 0px\",\n            borderRadius: 15,\n            backgroundColor: Colors.secondary,\n          }}\n          onClick={() => {\n            setVisible(true);\n          }}\n        >\n          <div style={{ fontSize: 18, fontWeight: \"bold\", color: Colors.text }}>\n            {string[\"hakkinda\"]}\n          </div>\n          <div className=\"flex row center\">\n            <RightOutlined style={{ fontSize: 20, color: Colors.text }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(MoreInfo);\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/SetModal.tsx",["178","179","180","181","182","183","184","185","186"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/componenets/Header.js",["187","188","189","190"],"import React, { useEffect, useState } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport { string } from \"../locales\";\nimport { LeftOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { Contact } from \"../pages/moreInfo\";\nimport { Modal } from \"antd\";\n\nexport function HelpText() {\n  const [visible, setVisible] = useState(false);\n\n  function ContactModal() {\n    return (\n      <Modal\n        bodyStyle={{ padding: 0, backgroundColor: Colors.darkGray }}\n        centered\n        closable={false}\n        visible={visible}\n        okText={string.kaydet}\n        cancelText={string.kapat}\n        onOk={() => {\n          setVisible(false);\n        }}\n        onCancel={() => {\n          setVisible(false);\n        }}\n        footer={null}\n      >\n        <Contact onClose={() => setVisible(false)} />\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <ContactModal />\n      <div\n        className=\"btn\"\n        onClick={() => {\n          setVisible(true);\n        }}\n        style={{\n          cursor: \"pointer\",\n          padding: 20,\n          textDecorationLine: \"underline\",\n          fontWeigh: \"bold\",\n          fontSize: 14,\n        }}\n      >\n        {string.yardimaihtiyacinvarmi}\n      </div>\n    </>\n  );\n}\n\nexport function MoreInfoButton({ close = false }) {\n  const history = useHistory();\n\n  if (close) {\n    return (\n      <div>\n        <img\n          style={{ marginTop: 15, width: 70, height: 75 }}\n          src={require(\"../assets/images/secili-dahafazla.png\").default}\n        />\n      </div>\n    );\n  }\n  return (\n    <div\n      onClick={() => {\n        history.push(\"more-info\");\n      }}\n      className=\"btn\"\n    >\n      <img\n        style={{ width: 50, height: 50 }}\n        src={require(\"../assets/images/dahafazla.png\").default}\n      />\n    </div>\n  );\n}\n\nfunction Header({\n  onBack,\n  left = () => <div />,\n  title = \"\",\n  right = () => <div />,\n}) {\n  return (\n    <div\n      className=\"flex row\"\n      style={{\n        flexDirection: \"space-between\",\n        alignItems: \"center\",\n        color: Colors.text,\n        width: \"100%\",\n        height: 60,\n        backgroundColor: Colors.darkGray,\n      }}\n    >\n      <div className=\"flex-1 left\">\n        {onBack ? (\n          <div className=\"btn\" onClick={onBack} style={{ padding: 20 }}>\n            <LeftOutlined style={{ fontSize: 25, color: Colors.text }} />\n          </div>\n        ) : null}\n        {left()}\n      </div>\n      <div\n        className=\"flex-1 center\"\n        style={{ fontSize: 18, fontWeight: \"bold\" }}\n      >\n        {title}\n      </div>\n      <div className=\"flex-1 right\">{right()}</div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/measure.js",["191"],"import React, { useEffect } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport { string } from \"../locales\";\nimport Header, { HelpText, MoreInfoButton } from \"../componenets/Header\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Measure = () => {\n  const history = useHistory();\n\n  useEffect(() => {}, []);\n\n  return (\n    <div className=\"center contain column\" style={{ paddingBottom: 100 }}>\n      <div className=\"center\" style={{ width: \"100%\" }}>\n        <Header left={() => <HelpText />} right={() => <MoreInfoButton />} />\n      </div>\n      <div\n        className=\"center\"\n        style={{\n          flex: 1,\n          fontSize: 25,\n          fontWeight: \"bold\",\n          color: Colors.text,\n        }}\n      >\n        LOGO\n      </div>\n      <div\n        className=\"center background-img\"\n        style={{\n          flex: 6,\n          width: \"100%\",\n          backgroundImage: `url(${\n            require(\"../assets/images/measure/bg.png\").default\n          })`,\n        }}\n      >\n        <img\n          onClick={() => {\n            history.push(\"compass\");\n          }}\n          src={require(\"../assets/images/measure/button.png\").default}\n          className=\"btn\"\n          width={250}\n          height={250}\n        />\n      </div>\n      <div\n        className=\"flex column center\"\n        style={{\n          flex: 1,\n          fontSize: 17,\n          fontWeight: \"bold\",\n          color: Colors.text,\n        }}\n      >\n        {string.olcumyap}\n        <div style={{ fontSize: 14, fontWeight: \"normal\" }}>\n          {string.olcumyapdesc}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Measure;\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/device.js",["192","193"],"import React, { useEffect, useState } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport { string } from \"../locales\";\nimport Header, { HelpText, MoreInfoButton } from \"../componenets/Header\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { Params } from \"../constants/Params\";\nimport { Spin } from \"antd\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport { observer } from \"mobx-react-lite\";\nimport BLEService from \"../services/BLEService\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Device = () => {\n  const history = useHistory();\n  const ble = IStore.ble;\n  const params = Params();\n  const usage_params = {\n    serial_no: params.serial_no,\n    device_version: params.device_version,\n    // temperature: params.temperature,\n    // pressure: params.pressure,\n    shot_counter: params.shot_counter,\n    statuses: params.statuses,\n  };\n\n  const [data, setData] = useState(ble.getData());\n  const [device, setDevice] = useState(\"loading\");\n\n  useEffect(() => {\n    BLEService.event.on(\"monitor\", _setData);\n    controlDevice();\n\n    return () => {\n      BLEService.event.removeListener(\"monitor\", _setData);\n    };\n  }, []);\n\n  function _setData({ all_data }) {\n    setData({ ...all_data });\n  }\n\n  function reload() {\n    setData({\n      ...data,\n      ...{\n        serial_no: \"\",\n        device_version: \"\",\n        temperature: \"\",\n        pressure: \"\",\n        shot_counter: \"\",\n        statuses: {\n          odometer_activity: {\n            title: \"lazermesafeolceraktifligi\",\n            value: null,\n          },\n          compass_activity: {\n            title: \"pusulaaktifligi\",\n            value: null,\n          },\n          bluetooth_activity: {\n            title: \"bluetoothaktifligi\",\n            value: null,\n          },\n          odometer_error: {\n            title: \"lazermesafeolcerhatabilgisi\",\n            value: null,\n          },\n          compass_error: {\n            title: \"pusulahatabilgisi\",\n            value: null,\n          },\n          bluetooth_error: {\n            title: \"bluetoothhatabilgisi\",\n            value: null,\n          },\n          battery_error: {\n            title: \"bataryahatabilgisi\",\n            value: null,\n          },\n        },\n      },\n    });\n\n    controlDevice();\n  }\n\n  async function controlDevice() {\n    const device = ble.getDevice();\n    setDevice(device);\n\n    if (device) {\n      getValues();\n    }\n  }\n\n  function getValues() {\n    for (let [key, param] of Object.entries(usage_params)) {\n      if (param.getHex) ble.sendDataToDevice(key, param.getHex)\n    }\n  }\n\n  if (!device) {\n    return (\n      <div className=\"column contain center\">\n        <div style={{ fontSize: 20, color: Colors.text, fontWeight: \"bold\" }}>\n          {string[\"101\"]}\n        </div>\n        <div\n          className=\"btn\"\n          onClick={() => {\n            history.push(\"select-device\");\n          }}\n          style={{\n            margin: 10,\n            padding: \"10px 15px\",\n            backgroundColor: Colors.primary,\n            borderRadius: 10,\n            fontSize: 16,\n            color: Colors.text,\n            fontWeight: \"bold\",\n          }}\n        >\n          {string.simdibaglan}\n        </div>\n      </div>\n    );\n  }\n\n  if (device == \"loading\") {\n    return null;\n  }\n\n  return (\n    <div className=\"center contain column\">\n      <div className=\"center\" style={{ width: \"100%\" }}>\n        <Header left={() => <HelpText />} right={() => <MoreInfoButton />} />\n      </div>\n      <div\n        className=\"flex row\"\n        style={{\n          width: \"50%\",\n          flexDirection: \"space-between\",\n          alignItems: \"center\",\n          fontSize: 25,\n          fontWeight: \"bold\",\n          color: Colors.primary,\n        }}\n      >\n        <div className=\"flex-1\"></div>\n        <div className=\"flex-3 center\" style={{ textAlign: \"center\" }}>\n          {string.cihazdurumbilgisi}\n        </div>\n        <div className=\"flex-1\" style={{ justifyContent: \"flex-end\" }}>\n          <div className=\"btn\" style={{ padding: 20 }} onClick={reload}>\n            <ReloadOutlined style={{ fontSize: 20, color: Colors.text }} />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"flex column scroll\"\n        style={{ width: \"100%\", height: \"100vh\" }}\n      >\n        <div\n          style={{\n            alignSelf: \"center\",\n            padding: 20,\n            margin: 20,\n            borderRadius: 10,\n            backgroundColor: Colors.secondary,\n            width: \"50%\",\n          }}\n        >\n          {Object.entries(usage_params).map(([key, { title }]) => {\n            const value = data[key];\n\n            return (\n              <div\n                key={key}\n                style={{\n                  margin: 5,\n                  marginBottom: 20,\n                  padding: 5,\n                  borderStyle: \"dashed\",\n                  borderWidth: 1,\n                  borderRadius: 1,\n                  borderColor: \"#667587\",\n                }}\n              >\n                <div\n                  style={{\n                    color: Colors.text,\n                    padding: 10,\n                    fontSize: 16,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {string[title]}\n                </div>\n                <hr style={{ borderColor: \"#4c5f72\" }} />\n                <div>\n                  {value ? (\n                    typeof value == \"string\" ? (\n                      <div\n                        style={{\n                          height: 50,\n                          color: Colors.text,\n                          padding: 10,\n                          fontSize: 16,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        {value}\n                      </div>\n                    ) : (\n                      Object.values(value).map(({ title, value }, index) => (\n                        <div\n                          key={index}\n                          className=\"flex row\"\n                          style={{\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              display: \"flex\",\n                              flex: 2,\n                              textAlign: \"left\",\n                              color: Colors.text,\n                              padding: 10,\n                              fontSize: 16,\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {string[title]}\n                          </div>\n                          <div\n                            style={{\n                              height: 40,\n                              display: \"flex\",\n                              flex: 1,\n                              textAlign: \"left\",\n                              color: Colors.text,\n                              padding: 10,\n                              fontSize: 14,\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {value ? string[value] ?? value : <Spin />}\n                          </div>\n                        </div>\n                      ))\n                    )\n                  ) : (\n                    <div\n                      style={{\n                        padding: 10,\n                        height: 50,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Spin />\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n          <div style={{ height: 100 }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Device);\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/laserMeter.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/pages/setting.js",["212","213","214"],"import React, { useEffect, useState } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport { string } from \"../locales\";\nimport Header, { HelpText, MoreInfoButton } from \"../componenets/Header\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { Params } from \"../constants/Params\";\nimport { InputNumber, Spin } from \"antd\";\nimport { ReloadOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { observer } from \"mobx-react-lite\";\nimport BLEService from \"../services/BLEService\";\nimport { useHistory } from \"react-router-dom\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { MStore } from \"../stores/MainStore\";\nimport { setModalTypes } from \"../componenets/SetModal\";\nimport { osName, OsTypes } from \"react-device-detect\";\nimport { ipcRenderer } from \"electron\";\nconst geomagnetism = require(\"geomagnetism\");\n\nconst Setting = () => {\n  const history = useHistory();\n  const ble = IStore.ble;\n  const params = Params();\n  const usage_params = {\n    distance_unit: params.distance_unit,\n    article_mode: params.article_mode,\n    language: params.language,\n    angle_unit_type: params.angle_unit_type,\n    night_vision_mode: params.night_vision_mode,\n    device_sleep_time: params.device_sleep_time,\n    bluetooth_sleep_time: params.bluetooth_sleep_time,\n    bottom_door_lock: params.bottom_door_lock,\n    top_door_lock: params.top_door_lock,\n    magnetic_declination_angle: params.magnetic_declination_angle,\n  };\n\n  const [data, setData] = useState(ble.getData());\n  const [device, setDevice] = useState(\"loading\");\n\n  useEffect(() => {\n    BLEService.event.on(\"monitor\", _setData);\n    controlDevice();\n\n    switch (osName) {\n      case OsTypes.Windows:\n      case OsTypes.WindowsPhone:\n        try {\n          ipcRenderer.send(\"get-location\", null);\n          ipcRenderer.on(\"find-location\", getLocation);\n        } catch (e) {}\n        break;\n      default:\n        break;\n    }\n\n    return () => {\n      BLEService.event.removeListener(\"monitor\", _setData);\n      ipcRenderer.removeListener(\"find-location\", getLocation);\n    };\n  }, []);\n\n  function _setData({ all_data }) {\n    setData({ ...all_data });\n  }\n\n  function getLocation(e, res) {\n    magneticAngle({\n      latitude: parseFloat(res[0].replace(\",\", \".\")),\n      longitude: parseFloat(res[1].replace(\",\", \".\")),\n    });\n  }\n\n  function magneticAngle(coords) {\n    const info = geomagnetism\n      .model()\n      .point([coords.latitude, coords.longitude]);\n\n    if (info[\"decl\"]) {\n      IStore.decl = Number(parseFloat(info.decl).toFixed(1));\n      ble.sendDataToDevice(\n        params.magnetic_declination_angle.title,\n        params.magnetic_declination_angle.getHex\n      );\n    }\n  }\n\n  function reload() {\n    setData({\n      ...data,\n      ...{\n        distance_unit: \"\",\n        article_mode: \"\",\n        language: \"\",\n        angle_unit_type: \"\",\n        night_vision_mode: \"\",\n        device_sleep_time: null,\n        bluetooth_sleep_time: null,\n        bottom_door_lock: 0,\n        top_door_lock: 0,\n        magnetic_declination_angle: 0,\n      },\n    });\n\n    controlDevice();\n  }\n\n  async function controlDevice() {\n    const device = ble.getDevice();\n    setDevice(device);\n\n    if (device) {\n      getValues();\n    }\n  }\n\n  function getValues() {\n    for (let [key, param] of Object.entries(usage_params)) {\n      if (param.getHex) ble.sendDataToDevice(key, param.getHex);\n    }\n  }\n\n  if (!device) {\n    return (\n      <div className=\"column contain center\">\n        <div style={{ fontSize: 20, color: Colors.text, fontWeight: \"bold\" }}>\n          {string[\"101\"]}\n        </div>\n        <div\n          className=\"btn\"\n          onClick={() => {\n            history.push(\"select-device\");\n          }}\n          style={{\n            margin: 10,\n            padding: \"10px 15px\",\n            backgroundColor: Colors.primary,\n            borderRadius: 10,\n            fontSize: 16,\n            color: Colors.text,\n            fontWeight: \"bold\",\n          }}\n        >\n          {string.simdibaglan}\n        </div>\n      </div>\n    );\n  }\n\n  if (device == \"loading\") {\n    return null;\n  }\n\n  return (\n    <div className=\"center contain column\">\n      <div className=\"center\" style={{ width: \"100%\" }}>\n        <Header left={() => <HelpText />} right={() => <MoreInfoButton />} />\n      </div>\n\n      <div\n        className=\"flex row\"\n        style={{\n          width: \"50%\",\n          flexDirection: \"space-between\",\n          alignItems: \"center\",\n          fontSize: 25,\n          fontWeight: \"bold\",\n          color: Colors.primary,\n        }}\n      >\n        <div className=\"flex-1\"></div>\n        <div className=\"flex-3 center\" style={{ textAlign: \"center\" }}>\n          {string.ayarlar}\n        </div>\n        <div className=\"flex-1\" style={{ justifyContent: \"flex-end\" }}>\n          <div className=\"btn\" style={{ padding: 20 }} onClick={reload}>\n            <ReloadOutlined style={{ fontSize: 20, color: Colors.text }} />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"flex column scroll\"\n        style={{ width: \"100%\", height: \"100vh\" }}\n      >\n        <div\n          style={{\n            alignSelf: \"center\",\n            padding: 20,\n            margin: 20,\n            borderRadius: 10,\n            width: \"50%\",\n          }}\n        >\n          {Object.entries(usage_params).map(\n            (\n              [\n                key,\n                { title, setHex = () => {}, options, type, numberParams = {} },\n              ],\n              index\n            ) => {\n              const value = data[key];\n\n              return (\n                <div\n                  key={index}\n                  className=\"flex row btn\"\n                  style={{\n                    zIndex: 999,\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    padding: 12,\n                    margin: \"15px 0px\",\n                    borderRadius: 15,\n                    backgroundColor: Colors.secondary,\n                  }}\n                  onClick={() => {\n                    if (value) {\n                      IStore.setSetModal({\n                        visible: true,\n                        title,\n                        value: value?.id ?? value,\n                        type,\n                        numberParams,\n                        options: options ? Object.values(options) : null,\n                        onChange: async (id) => {\n                          if (key === \"night_vision_mode\" && id === 1) {\n                            confirmAlert({\n                              title: string[\"uyari\"],\n                              message: string[\"ekranparlakligi\"],\n                              buttons: [\n                                {\n                                  label: string[\"hayir\"],\n                                  onClick: () => {},\n                                },\n                                {\n                                  label: string[\"evet\"],\n                                  onClick: () => {\n                                    ble.sendDataToDevice(key, setHex(id));\n                                  },\n                                },\n                              ],\n                            });\n                          } else ble.sendDataToDevice(key, setHex(id));\n\n                          return true;\n                        },\n                      });\n                    }\n                  }}\n                >\n                  <div\n                    style={{\n                      fontSize: 18,\n                      fontWeight: \"bold\",\n                      color: Colors.text,\n                    }}\n                  >\n                    {string[title]}\n                  </div>\n                  <div className=\"flex row center\">\n                    {value ? (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flex: 2,\n                          textAlign: \"left\",\n                          color: Colors.text,\n                          padding: 10,\n                          fontSize: 16,\n                          fontWeight: \"bold\",\n                        }}\n                      >\n                        {value?.value\n                          ? string[value?.value] ?? value?.value\n                          : (numberParams?.fixed\n                              ? value / Math.pow(10, numberParams?.fixed)\n                              : value) +\n                            \"\" +\n                            (numberParams?.unit\n                              ? \" \" + numberParams?.unit\n                              : \"\")}\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flex: 2,\n                          textAlign: \"left\",\n                          padding: 10,\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    <RightOutlined\n                      style={{ fontSize: 20, color: Colors.text }}\n                    />\n                  </div>\n                </div>\n              );\n            }\n          )}\n          <div\n            className=\"flex row btn\"\n            style={{\n              zIndex: 999,\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              padding: 12,\n              margin: \"15px 0px\",\n              borderRadius: 15,\n              backgroundColor: Colors.secondary,\n            }}\n            onClick={() => {\n              IStore.setSetModal({\n                visible: true,\n                title: string[\"hedefkonumgosterimformati\"],\n                value: MStore.hedefkonumgosterimtipi,\n                type: setModalTypes.Select,\n                options: [\n                  {\n                    id: \"utm\",\n                    value: string[\"utm\"],\n                  },\n                  {\n                    id: \"latlong\",\n                    value: string[\"latlong\"],\n                  },\n                ],\n                onChange: async (id) => {\n                  MStore.hedefkonumgosterimtipi = id;\n                  return true;\n                },\n              });\n            }}\n          >\n            <div\n              style={{\n                fontSize: 18,\n                fontWeight: \"bold\",\n                color: Colors.text,\n              }}\n            >\n              {string[\"hedefkonumgosterimformati\"]}\n            </div>\n            <div className=\"flex row center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 2,\n                  textAlign: \"left\",\n                  color: Colors.text,\n                  padding: 10,\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {string[MStore.hedefkonumgosterimtipi]}\n              </div>\n\n              <RightOutlined style={{ fontSize: 20, color: Colors.text }} />\n            </div>\n          </div>\n          <div style={{ height: 100 }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Setting);\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Colors.ts",["215"],"export default {\n  darkPrimary: \"#002067\",\n  primary: \"#024089\",\n  lightPrimary: \"#2462ab\",\n  secondary: \"#182b3f\",\n  white: \"white\",\n  black: \"black\",\n  gray: \"#8d8b8b\",\n  lightGray: \"#f5f5f5\",\n  darkGray: \"#1e2227\",\n  lightBlack: \"#0f1013\",\n  text:\"#a4a5a2\",\n  red:\"#B71C1C\",\n  green:\"#2E7D32\",\n  transparent: \"transparent\",\n};\n\n",["216","217"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/stores/InstantStore.ts",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/stores/MainStore.ts",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Config.ts",["218","219"],"import { string } from \"../locales\";\nimport { success } from \"../functions/toast\";\nconst shell = require(\"electron\").shell;\n\nexport const contacts = {\n  Address: {\n    title: \"adres\",\n    value:\n      \"Balıkhisar Mahallesi Koca Seyit Onbaşı Caddesi No: 1 Akyurt-Ankara P.K. 20 Akyurt, 06750 Ankara, Türkiye\",\n    onPress: (address: any) => {\n      shell.openExternal(`https://goo.gl/maps/mQzWFxXfz91hY4DL6`);\n    },\n  },\n  Email: {\n    title: \"mgeo_email\",\n    value: \"mgeo_musteri@aselsan.com.tr\",\n    onPress: (email: any) => {\n      shell.openExternal(`mailto:${email}`);\n    },\n  },\n  Phone: {\n    title: \"mgeo_telefon\",\n    value: \"+90 850 360 10 30\",\n    onPress: (phone: any) => {\n      shell.openExternal(`tel:${phone}`);\n    },\n  },\n  Phone2: {\n    title: \"telefon\",\n    value: \"+90 312 847 53 00\",\n    onPress: (phone: any) => {\n      shell.openExternal(`tel:${phone}`);\n    },\n  },\n  Faks: {\n    title: \"faks\",\n    value: \"+90 312 847 53 20\",\n    onPress: (phone: string) => {\n      navigator.clipboard.writeText(phone);\n\n      success(string[\"fakskopyalandi\"]);\n    },\n  },\n};\n\nexport const sss =\n  string.dil == \"tr\"\n    ? {\n        Application: [\n          {\n            title: \"Uygulama Soru 1\",\n            content: \"Cevap 1\",\n          },\n          {\n            title: \"Uygulama Soru 2\",\n            content: \"Cevap 2\",\n          },\n          {\n            title: \"Uygulama Soru 3\",\n            content: \"Cevap 3\",\n          },\n        ],\n        DEVICE: [\n          {\n            title: \"Cihaz Soru 1\",\n            content: \"Cevap 1\",\n          },\n          {\n            title: \"Cihaz Soru 2\",\n            content: \"Cevap 2\",\n          },\n          {\n            title: \"Cihaz Soru 3\",\n            content: \"Cevap 3\",\n          },\n        ],\n      }\n    : {\n        Application: [\n          {\n            title: \"Application Ask 1\",\n            content: \"Answer 1\",\n          },\n          {\n            title: \"Application Ask 2\",\n            content: \"Answer 2\",\n          },\n          {\n            title: \"Application Ask 3\",\n            content: \"Answer 3\",\n          },\n        ],\n        DEVICE: [\n          {\n            title: \"Device Ask 1\",\n            content: \"Answer 1\",\n          },\n          {\n            title: \"Device Ask 2\",\n            content: \"Answer 2\",\n          },\n          {\n            title: \"Device Ask 3\",\n            content: \"Answer 3\",\n          },\n        ],\n      };\n\nexport const HomeScreenTypes = {\n  MesafeVePusula: {\n    id: 0,\n    value: \"mesafevepusula\",\n  },\n  Pusula: {\n    id: 1,\n    value: \"pusula\",\n  },\n  Mesafe: {\n    id: 2,\n    value: \"mesafe\",\n  },\n};\n\nexport const DistanceUnitTypes = {\n  Metre: {\n    id: 0,\n    value: \"metre\",\n    symbol: \"m\",\n    toFeet: (f: number) => parseFloat((f * 3.281).toString()),\n  },\n  Feet: {\n    id: 1,\n    value: \"feet\",\n    symbol: \"ft\",\n    toMeter: (f: number) => parseFloat((f / 3.281).toString()),\n  },\n};\n\nexport const AngleUnitTypes = {\n  Derece: {\n    id: 0,\n    value: \"derece\",\n    symbol: \"°\",\n  },\n  Milyem6000: {\n    id: 1,\n    value: \"6000 Milyem\",\n    symbol: \"m/\",\n    toDegree: (m: number) => m * (360 / 6000),\n  },\n  Milyem6300: {\n    id: 2,\n    value: \"6300 Milyem\",\n    symbol: \"m/\",\n    toDegree: (m: number) => m * (360 / 6300),\n  },\n  Milyem6400: {\n    id: 3,\n    value: \"6400 Milyem\",\n    symbol: \"m/\",\n    toDegree: (m: number) => m * (360 / 6400),\n  },\n};\n\nexport const OdometerActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  },\n};\n\nexport const CompassActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  },\n};\n\nexport const BluetoothActivityTypes = {\n  Kapali: {\n    id: \"0\",\n    value: \"kapali\",\n  },\n  Acik: {\n    id: \"1\",\n    value: \"acik\",\n  },\n};\n\nexport const OdometerErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataYok: {\n    id: \"10\",\n    value: \"hatayok\",\n  },\n  HataVar: {\n    id: \"11\",\n    value: \"hatavar\",\n  },\n};\n\nexport const CompassErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataYok: {\n    id: \"10\",\n    value: \"hatayok\",\n  },\n  HataVar: {\n    id: \"11\",\n    value: \"hatavar\",\n  },\n};\n\nexport const BluetoothErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  HataVar: {\n    id: \"10\",\n    value: \"hatavar\",\n  },\n  HataYok: {\n    id: \"11\",\n    value: \"hatayok\",\n  },\n};\n\nexport const BatteryErrorTypes = {\n  BilgiYok: {\n    id: \"00\",\n    value: \"bilgiyok\",\n  },\n  NA: {\n    id: \"01\",\n    value: \"N/A\",\n  },\n  PilGucuIyi: {\n    id: \"10\",\n    value: \"pilgucuiyi\",\n  },\n  PilGucuZayif: {\n    id: \"11\",\n    value: \"pilgucuzayif\",\n  },\n};\n\nexport const ArticleMode = {\n  Kapali: {\n    id: 0,\n    value: \"kapali\",\n  },\n  Acik: {\n    id: 1,\n    value: \"acik\",\n  },\n  Otomatik: {\n    id: 2,\n    value: \"otomatik\",\n  },\n};\n\nexport const Language = {\n  Turkce: {\n    id: 0,\n    value: \"turkce\",\n  },\n  Ingilizce: {\n    id: 1,\n    value: \"ingilizce\",\n  },\n};\n\nexport const NightVisionMode = {\n  Kapali: {\n    id: 0,\n    value: \"kapali\",\n  },\n  Acik: {\n    id: 1,\n    value: \"acik\",\n  },\n};\n\nexport const DeviceSleepTime = {\n  t0: {\n    id: 0,\n    value: \"sonsuz\",\n  },\n  t20: {\n    id: 1,\n    value: \"20 \" + string.saniye,\n  },\n  t30: {\n    id: 2,\n    value: \"30 \" + string.saniye,\n  },\n  t60: {\n    id: 3,\n    value: \"1 \" + string.dakika,\n  },\n  t120: {\n    id: 4,\n    value: \"2 \" + string.dakika,\n  },\n  t300: {\n    id: 5,\n    value: \"5 \" + string.dakika,\n  },\n  t600: {\n    id: 6,\n    value: \"10 \" + string.dakika,\n  },\n};\n\nexport const BluetoothSleepTime = {\n  t0: {\n    id: 0,\n    value: \"sonsuz\",\n  },\n  t20: {\n    id: 1,\n    value: \"20 \" + string.saniye,\n  },\n  t30: {\n    id: 2,\n    value: \"30 \" + string.saniye,\n  },\n  t60: {\n    id: 3,\n    value: \"1 \" + string.dakika,\n  },\n  t120: {\n    id: 4,\n    value: \"2 \" + string.dakika,\n  },\n  t300: {\n    id: 5,\n    value: \"5 \" + string.dakika,\n  },\n  t600: {\n    id: 6,\n    value: \"10 \" + string.dakika,\n  },\n};\n\nexport function findType(data: any, id: any, key = \"value\") {\n  let res: any = \" \";\n  try {\n    res = Object.values(data).find((e: any) => e.id == id);\n    if (key) res = res[key];\n  } catch (e) {}\n  return res;\n}\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/constants/Params.ts",["220"],"import {\n  AngleUnitTypes,\n  ArticleMode,\n  BluetoothSleepTime,\n  DeviceSleepTime,\n  DistanceUnitTypes,\n  Language,\n  NightVisionMode,\n} from \"./Config\";\nimport { string } from \"../locales\";\nimport { setModalTypes } from \"../componenets/SetModal\";\nimport { productId } from \"../functions/AES\";\n\ndeclare global {\n  interface Array<T> {\n    checksum(data: any): Array<T>;\n  }\n}\n\nexport const PROCESS_KEYS = {\n  KimlikDurumBilgisi: 0xa0,\n  KimlikDogrulama: 0xa1,\n  KimlikDogrulamaSorgu: 0xa2,\n  KimlikDogrulamaSifreli: 0xa3,\n  DurumBilgisi: 0x10,\n  Versiyon: 0x11,\n  Mesafe: 0x12,\n  CIT: 0x13,\n  AltKapiLimitiYaz: 0x14,\n  AltKapiLimiti: 0x15,\n  UstKapiLimitiYaz: 0x16,\n  UstKapiLimiti: 0x17,\n  ArtikilYaz: 0x18,\n  Artikil: 0x19,\n  DilYaz: 0x1a,\n  Dil: 0x1b,\n  Pusula: 0x1c,\n  MesafeVePusula: 0x1d,\n  Sicaklik: 0x1e,\n  AciOlcuBirimiYaz: 0x1f,\n  AciOlcuBirimi: 0x20,\n  MesafeOlcuBirimiYaz: 0x21,\n  MesafeOlcuBirimi: 0x22,\n  GeceGorusYaz: 0x23,\n  GeceGorus: 0x24,\n  CihazKapanmaSuresiYaz: 0x25,\n  CihazKapanmaSuresi: 0x26,\n  BluetoothKapanmaSuresiYaz: 0x29,\n  BluetoothKapanmaSuresi: 0x2a,\n  ManyetikSapmaAcisiYaz: 0x2b,\n  ManyetikSapmaAcisi: 0x2c,\n  SeriNo: 0x51,\n  Sayac: 0x53,\n  Basinc: 0x68,\n};\n\nexport const PROCESS_KEYS_LENGTH = {\n  KimlikDurumBilgisi: {\n    key: 0xa0,\n    length: 5,\n  },\n  KimlikDogrulama: {\n    key: 0xa1,\n    length: 5,\n  },\n  KimlikDogrulamaSorgu: {\n    key: 0xa2,\n    length: 19,\n  },\n  KimlikDogrulamaSifreli: {\n    key: 0xa3,\n    length: 39,\n  },\n  DurumBilgisi: {\n    key: 0x10,\n    length: 5,\n  },\n  Versiyon: {\n    key: 0x11,\n    length: 5,\n  },\n  Mesafe: {\n    key: 0x12,\n    length: 13,\n  },\n  CIT: {\n    key: 0x13,\n    length: 5,\n  },\n  AltKapiLimitiYaz: {\n    key: 0x14,\n    length: 5,\n  },\n  AltKapiLimiti: {\n    key: 0x15,\n    length: 5,\n  },\n  UstKapiLimitiYaz: {\n    key: 0x16,\n    length: 5,\n  },\n  UstKapiLimiti: {\n    key: 0x17,\n    length: 5,\n  },\n  ArtikilYaz: {\n    key: 0x18,\n    length: 5,\n  },\n  Artikil: {\n    key: 0x19,\n    length: 5,\n  },\n  DilYaz: {\n    key: 0x1a,\n    length: 5,\n  },\n  Dil: {\n    key: 0x1b,\n    length: 5,\n  },\n  Pusula: {\n    key: 0x1c,\n    length: 10,\n  },\n  MesafeVePusula: {\n    key: 0x1d,\n    length: 20,\n  },\n  Sicaklik: {\n    key: 0x1e,\n    length: 5,\n  },\n  AciOlcuBirimiYaz: {\n    key: 0x1f,\n    length: 5,\n  },\n  AciOlcuBirimi: {\n    key: 0x20,\n    length: 5,\n  },\n  MesafeOlcuBirimiYaz: {\n    key: 0x21,\n    length: 5,\n  },\n  MesafeOlcuBirimi: {\n    key: 0x22,\n    length: 5,\n  },\n  GeceGorusYaz: {\n    key: 0x23,\n    length: 5,\n  },\n  GeceGorus: {\n    key: 0x24,\n    length: 5,\n  },\n  CihazKapanmaSuresiYaz: {\n    key: 0x25,\n    length: 5,\n  },\n  CihazKapanmaSuresi: {\n    key: 0x26,\n    length: 5,\n  },\n  BluetoothKapanmaSuresiYaz: {\n    key: 0x29,\n    length: 5,\n  },\n  BluetoothKapanmaSuresi: {\n    key: 0x2a,\n    length: 5,\n  },\n  ManyetikSapmaAcisiYaz: {\n    key: 0x2b,\n    length: 5,\n  },\n  ManyetikSapmaAcisi: {\n    key: 0x2c,\n    length: 5,\n  },\n  SeriNo: {\n    key: 0x51,\n    length: 5,\n  },\n  Sayac: {\n    key: 0x53,\n    length: 7,\n  },\n  Basinc: {\n    key: 0x68,\n    length: 7,\n  },\n};\n\nArray.prototype.checksum = function (data: number) {\n  return checkSum([...this, ...intToBytes(data)]);\n};\n\nfunction intToBytes(x: number) {\n  return [x << 16, x << 24].map((z) => z >>> 24);\n}\n\nfunction checkSum(bytes: any) {\n  let checksum = 0x00;\n  for (let i = 0; i < bytes.length; i++) checksum += bytes[i] & 0xff;\n\n  checksum = (~checksum + 1) & 0xff;\n  return [...bytes, checksum];\n}\n\nexport const Params = () => {\n  return {\n    kimlikdogrulama: {\n      title: \"kimlikdogrulama\",\n      getHex: checkSum([0xa8, PROCESS_KEYS.KimlikDogrulama, 0x00, 0x00]),\n    },\n    kimlikdurumbilgisi: {\n      title: \"durumbilgisi\",\n      getHex: (cevapVerilenKomut: number, durumBilgisi: number) =>\n        checkSum([\n          0xa8,\n          PROCESS_KEYS.KimlikDurumBilgisi,\n          cevapVerilenKomut,\n          durumBilgisi,\n        ]),\n    },\n    kimlikdogrulamasorgu: {\n      title: \"kimlikdogrulamasorgu\",\n      getHex: (dogrulamaVerisi: Uint8Array) =>\n        checkSum([0xa8, PROCESS_KEYS.KimlikDogrulamaSorgu, ...dogrulamaVerisi]),\n    },\n    kimlikdogrulamasorgususifreli: {\n      title: \"kimlikdogrulamasorgususifreli\",\n      getHex: (iv: Uint8Array, sifrelenmisDogrulamaVerisi: Uint8Array) =>\n        checkSum([\n          0xa8,\n          PROCESS_KEYS.KimlikDogrulamaSifreli,\n          ...iv,\n          ...sifrelenmisDogrulamaVerisi,\n          ...productId,\n        ]),\n    },\n    statuses: {\n      title: \"cihazdurumbilgisi\",\n      getHex: [0xa5, PROCESS_KEYS.DurumBilgisi].checksum(0),\n    },\n    device_version: {\n      title: \"cihazversiyonu\",\n      getHex: [0xa5, PROCESS_KEYS.Versiyon].checksum(0),\n    },\n    bottom_door_lock: {\n      title: \"altkapikilidi\",\n      type: setModalTypes.Number,\n      numberParams: { fixed: 0, min: 0, max: 15000, unit: string.metre2 },\n      setHex: (number: number) =>\n        [0xa5, PROCESS_KEYS.AltKapiLimitiYaz].checksum(number),\n      getHex: [0xa5, PROCESS_KEYS.AltKapiLimiti].checksum(0),\n    },\n    top_door_lock: {\n      title: \"ustkapikilidi\",\n      type: setModalTypes.Number,\n      numberParams: { fixed: 0, min: 0, max: 5000, unit: string.metre2 },\n      setHex: (number: number) =>\n        [0xa5, PROCESS_KEYS.UstKapiLimitiYaz].checksum(number),\n      getHex: [0xa5, PROCESS_KEYS.UstKapiLimiti].checksum(0),\n    },\n    article_mode: {\n      title: \"artikilmodu\",\n      options: ArticleMode,\n      type: setModalTypes.Select,\n      setHex: (id: number) => [0xa5, PROCESS_KEYS.ArtikilYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.Artikil].checksum(0),\n    },\n    language: {\n      title: \"dilsecimi\",\n      options: Language,\n      type: setModalTypes.Select,\n      setHex: (id: number) => [0xa5, PROCESS_KEYS.DilYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.Dil].checksum(0),\n    },\n    distance_and_compass: {\n      title: \"mesafevepusula\",\n      getHex: [0xa5, PROCESS_KEYS.MesafeVePusula].checksum(0),\n    },\n    temperature: {\n      title: \"sicaklik\",\n      getHex: [0xa5, PROCESS_KEYS.Sicaklik].checksum(0),\n    },\n    angle_unit_type: {\n      title: \"aciolcubirimi\",\n      options: AngleUnitTypes,\n      type: setModalTypes.Select,\n      setHex: (id: number) =>\n        [0xa5, PROCESS_KEYS.AciOlcuBirimiYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.AciOlcuBirimi].checksum(0),\n    },\n    distance_unit: {\n      title: \"mesafeolcubirimi\",\n      options: DistanceUnitTypes,\n      type: setModalTypes.Select,\n      setHex: (id: number) =>\n        [0xa5, PROCESS_KEYS.MesafeOlcuBirimiYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.MesafeOlcuBirimi].checksum(0),\n    },\n    night_vision_mode: {\n      title: \"gecegorusmodu\",\n      options: NightVisionMode,\n      type: setModalTypes.Select,\n      setHex: (id: number) => [0xa5, PROCESS_KEYS.GeceGorusYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.GeceGorus].checksum(0),\n    },\n    device_sleep_time: {\n      title: \"cihazkapanmasuresi\",\n      options: DeviceSleepTime,\n      type: setModalTypes.Select,\n      setHex: (id: number) =>\n        [0xa5, PROCESS_KEYS.CihazKapanmaSuresiYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.CihazKapanmaSuresi].checksum(0),\n    },\n    bluetooth_sleep_time: {\n      title: \"bluetoothzamanasimisuresi\",\n      options: BluetoothSleepTime,\n      type: setModalTypes.Select,\n      setHex: (id: number) =>\n        [0xa5, PROCESS_KEYS.BluetoothKapanmaSuresiYaz].checksum(id),\n      getHex: [0xa5, PROCESS_KEYS.BluetoothKapanmaSuresi].checksum(0),\n    },\n    magnetic_declination_angle: {\n      title: \"manyetiksapmaacisi\",\n      type: setModalTypes.Number,\n      numberParams: { fixed: 1, min: -3599, max: 3599, unit: string.derece },\n      setHex: (number: number) =>\n        [0xa5, PROCESS_KEYS.ManyetikSapmaAcisiYaz].checksum(number),\n      getHex: [0xa5, PROCESS_KEYS.ManyetikSapmaAcisi].checksum(0),\n    },\n    serial_no: {\n      title: \"serino\",\n      getHex: [0xa6, PROCESS_KEYS.SeriNo].checksum(0),\n    },\n    shot_counter: {\n      title: \"atissayaci\",\n      getHex: [0xa6, PROCESS_KEYS.Sayac].checksum(0),\n    },\n    pressure: {\n      title: \"basinc\",\n      getHex: [0xa6, PROCESS_KEYS.Basinc].checksum(0),\n    },\n  };\n};\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/services/BLEService.ts",["221","222","223","224","225","226","227","228"],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/toast.tsx",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/Conversions.tsx",["229","230","231","232","233","234"],"import {AngleUnitTypes, DistanceUnitTypes, findType} from \"../constants/Config\";\n\n\nexport function distanceConversion(distance:number,unit1:any,unit2:any){\n    let unit\n    try {\n        unit1 = findType(DistanceUnitTypes,unit1,\"\")\n        unit2 = findType(DistanceUnitTypes,unit2,\"\")\n        unit = unit2.symbol\n\n        if(unit1.id == DistanceUnitTypes.Metre.id && unit2.id == DistanceUnitTypes.Feet.id){\n            distance = unit1.toFeet(distance)\n        }else if(unit1.id == DistanceUnitTypes.Feet.id && unit2.id == DistanceUnitTypes.Metre.id){\n            distance = unit1.toMeter(distance)\n        }\n    }catch (e) {\n        return {distance: 0,unit:\"\"}\n    }\n\n\n    return {distance,unit}\n}\n\n\nexport function angleConversion(angle:number,unit1:any,unit2:any){\n\n    let unit\n    try {\n        unit1 = findType(AngleUnitTypes,unit1,\"\")\n        unit2 = findType(AngleUnitTypes,unit2,\"\")\n        unit = unit2.symbol\n\n        if(unit1.id != AngleUnitTypes.Derece.id && unit2.id == AngleUnitTypes.Derece.id){\n            angle = unit1.toDegree(angle)\n        }\n\n    }catch (e) {\n\n        return {angle: 0,unit:\"\"}\n    }\n\n\n    return {angle,unit}\n}","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/findLocation.tsx",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/cMoment.tsx",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/Buffer.tsx",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/findData.tsx",["235","236","237"],"import { Params, PROCESS_KEYS } from \"../constants/Params\";\nimport { Base64ToHex } from \"./Buffer\";\nimport {\n  AngleUnitTypes,\n  ArticleMode,\n  BatteryErrorTypes,\n  BluetoothActivityTypes,\n  BluetoothErrorTypes,\n  BluetoothSleepTime,\n  CompassActivityTypes,\n  CompassErrorTypes,\n  DeviceSleepTime,\n  DistanceUnitTypes,\n  findType,\n  Language,\n  NightVisionMode,\n  OdometerActivityTypes,\n  OdometerErrorTypes,\n} from \"../constants/Config\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { string } from \"../locales\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nconst params = Params();\n\nfunction angleDiffToast(angle: string) {\n  const { fixed } = params.magnetic_declination_angle.numberParams;\n\n  const value1 = angle.substr(0, angle.length - fixed);\n  const value2 = angle.substr(fixed * -1);\n\n  let numberAngle;\n\n  if (value2 && !value1) {\n    numberAngle = Number(\"0.\" + value2);\n  } else {\n    numberAngle = Number(value1 + \".\" + value2);\n  }\n\n  if (IStore.decl !== null && IStore.firstDeclToast) {\n    IStore.firstDeclToast = false;\n    const diff = Math.abs(numberAngle - IStore.decl);\n\n    if (diff >= 0.5) {\n      confirmAlert({\n        title: string[\"uyari\"],\n        message: string[\"manyetiksapmauyari\"],\n        buttons: [\n          {\n            label: string[\"hayir\"],\n            onClick: () => {},\n          },\n          {\n            label: string[\"evet\"],\n            onClick: () => {\n              const _angle = IStore.decl!.toString();\n\n              const value1 = _angle.split(\".\")[0];\n              const value2 = _angle.split(\".\")[1];\n\n              const _value: any = [\n                value1 || 0,\n                value2 ? Number(value2).toFixed(1) : 0,\n              ];\n\n              const value = parseInt(\n                parseInt(_value[0] ? _value[0] : \"0\") +\n                  \"\" +\n                  (fixed ? parseInt(_value[1] ? _value[1] : 0) : \"\")\n              );\n\n              IStore.ble.sendDataToDevice(\n                params.magnetic_declination_angle.title,\n                params.magnetic_declination_angle.setHex(value)\n              );\n            },\n          },\n        ],\n      });\n    }\n  }\n}\n\nexport function findData(value: any) {\n  try {\n    value = Base64ToHex(value);\n    const command = value[1];\n\n    switch (command) {\n      case PROCESS_KEYS.SeriNo:\n        return { key: \"serial_no\", value: findSerial(value) };\n      case PROCESS_KEYS.Versiyon:\n        return { key: \"device_version\", value: findVersion(value) };\n      case PROCESS_KEYS.Sicaklik:\n        return { key: \"temperature\", value: findTemperature(value) };\n      case PROCESS_KEYS.Basinc:\n        return { key: \"pressure\", value: findPressure(value) };\n      case PROCESS_KEYS.Sayac:\n        return { key: \"shot_counter\", value: findShotCounter(value) };\n      case PROCESS_KEYS.DurumBilgisi:\n        return { key: \"statuses\", value: findStatuses(value) };\n      case PROCESS_KEYS.MesafeOlcuBirimi:\n      case PROCESS_KEYS.MesafeOlcuBirimiYaz:\n        return { key: \"distance_unit\", value: findDistanceUnit(value) };\n      case PROCESS_KEYS.Artikil:\n      case PROCESS_KEYS.ArtikilYaz:\n        return { key: \"article_mode\", value: findArticleMode(value) };\n      case PROCESS_KEYS.Dil:\n      case PROCESS_KEYS.DilYaz:\n        return { key: \"language\", value: findLanguage(value) };\n      case PROCESS_KEYS.AciOlcuBirimi:\n      case PROCESS_KEYS.AciOlcuBirimiYaz:\n        return { key: \"angle_unit_type\", value: findAngleUnit(value) };\n      case PROCESS_KEYS.GeceGorus:\n      case PROCESS_KEYS.GeceGorusYaz:\n        return { key: \"night_vision_mode\", value: findNightVisionMode(value) };\n      case PROCESS_KEYS.CihazKapanmaSuresi:\n      case PROCESS_KEYS.CihazKapanmaSuresiYaz:\n        return { key: \"device_sleep_time\", value: findDeviceSleep(value) };\n      case PROCESS_KEYS.BluetoothKapanmaSuresi:\n      case PROCESS_KEYS.BluetoothKapanmaSuresiYaz:\n        return {\n          key: \"bluetooth_sleep_time\",\n          value: findBluetoothSleep(value),\n        };\n      case PROCESS_KEYS.AltKapiLimiti:\n      case PROCESS_KEYS.AltKapiLimitiYaz:\n        return { key: \"bottom_door_lock\", value: findBottomDoorLock(value) };\n      case PROCESS_KEYS.UstKapiLimiti:\n      case PROCESS_KEYS.UstKapiLimitiYaz:\n        return { key: \"top_door_lock\", value: findTopDoorLock(value) };\n      case PROCESS_KEYS.ManyetikSapmaAcisi:\n      case PROCESS_KEYS.ManyetikSapmaAcisiYaz:\n        return {\n          key: \"magnetic_declination_angle\",\n          value: findMagneticDeclinationAngle(value),\n        };\n      case PROCESS_KEYS.MesafeVePusula:\n        return {\n          key: \"distance_and_compass\",\n          value: findDistanceAndCompass(value),\n        };\n      default:\n        return \"Not Found\";\n    }\n  } catch (e) {\n    // console.error(e, value);\n    return \"Error Data\";\n  }\n}\n\nfunction findSerial(value: any) {\n  return ((value[2] << 8) | value[3]).toString();\n}\n\nfunction findVersion(value: any) {\n  return value[2] + \".\" + value[3] + \"v\";\n}\n\nfunction findTemperature(value: any) {\n  let data = (value[2] << 8) | value[3];\n  if ((data & 0x8000) > 0) {\n    data = data - 0x10000;\n  }\n  return data / 100 + \"°\";\n}\n\nfunction findPressure(value: any) {\n  return ((value[2] << 8) | value[3]).toString();\n}\n\nfunction findShotCounter(value: any) {\n  return (\n    (value[2] << 24) |\n    (value[3] << 16) |\n    (value[4] << 8) |\n    value[5]\n  ).toString();\n}\n\nfunction findStatuses(value: any) {\n  let status1_binary = value[2].toString(2);\n  let status2_binary = value[3].toString(2);\n\n  return {\n    odometer_activity: {\n      title: \"lazermesafeolceraktifligi\",\n      value: findType(OdometerActivityTypes, status1_binary[2]),\n    },\n    compass_activity: {\n      title: \"pusulaaktifligi\",\n      value: findType(CompassActivityTypes, status1_binary[1]),\n    },\n    bluetooth_activity: {\n      title: \"bluetoothaktifligi\",\n      value: findType(BluetoothActivityTypes, status1_binary[0]),\n    },\n    odometer_error: {\n      title: \"lazermesafeolcerhatabilgisi\",\n      value: findType(\n        OdometerErrorTypes,\n        status2_binary[6] + \"\" + status2_binary[7]\n      ),\n    },\n    compass_error: {\n      title: \"pusulahatabilgisi\",\n      value: findType(\n        CompassErrorTypes,\n        status2_binary[4] + \"\" + status2_binary[5]\n      ),\n    },\n    bluetooth_error: {\n      title: \"bluetoothhatabilgisi\",\n      value: findType(\n        BluetoothErrorTypes,\n        status2_binary[2] + \"\" + status2_binary[3]\n      ),\n    },\n    battery_error: {\n      title: \"bataryahatabilgisi\",\n      value: findType(\n        BatteryErrorTypes,\n        status2_binary[0] + \"\" + status2_binary[1]\n      ),\n    },\n  };\n}\n\nfunction findDistanceUnit(value: any) {\n  return findType(DistanceUnitTypes, value[3], \"\");\n}\n\nfunction findArticleMode(value: any) {\n  return findType(ArticleMode, value[3], \"\");\n}\n\nfunction findLanguage(value: any) {\n  return findType(Language, value[3], \"\");\n}\n\nfunction findAngleUnit(value: any) {\n  return findType(AngleUnitTypes, value[3], \"\");\n}\n\nfunction findNightVisionMode(value: any) {\n  return findType(NightVisionMode, value[3], \"\");\n}\n\nfunction findDeviceSleep(value: any) {\n  return findType(DeviceSleepTime, value[3], \"\");\n}\n\nfunction findBluetoothSleep(value: any) {\n  return findType(BluetoothSleepTime, value[3], \"\");\n}\n\nfunction findBottomDoorLock(value: any) {\n  return ((value[2] << 8) | value[3]).toString();\n}\n\nfunction findTopDoorLock(value: any) {\n  return ((value[2] << 8) | value[3]).toString();\n}\n\nfunction findMagneticDeclinationAngle(value: any) {\n  let data = (value[2] << 8) | value[3];\n\n  if ((data & 0x8000) > 0) {\n    data = data - 0x10000;\n  }\n\n  angleDiffToast(data.toString());\n\n  return data.toString();\n}\n\nfunction findDistanceAndCompass(value: any) {\n  const distance_unit = findType(DistanceUnitTypes, value[2], \"id\");\n  const distance1 = ((value[3] << 16) | (value[4] << 8) | value[5]) / 100;\n  const distance2 = ((value[6] << 16) | (value[7] << 8) | value[8]) / 100;\n  const distance3 = ((value[9] << 16) | (value[10] << 8) | value[11]) / 100;\n  const distance = [\n    ...(distance1 ? [distance1] : []),\n    ...(distance2 ? [distance2] : []),\n    ...(distance3 ? [distance3] : []),\n  ];\n\n  const angle_unit = findType(AngleUnitTypes, value[12], \"id\");\n  let azimuth = (value[13] << 8) | value[14];\n  let elevation = (value[15] << 8) | value[16];\n  let roll = (value[17] << 8) | value[18];\n\n  if ((azimuth & 0x8000) > 0) {\n    azimuth = azimuth - 0x10000;\n  }\n  azimuth = azimuth / (angle_unit == AngleUnitTypes.Derece.id ? 10 : 1);\n\n  if ((elevation & 0x8000) > 0) {\n    elevation = elevation - 0x10000;\n  }\n  elevation = elevation / (angle_unit == AngleUnitTypes.Derece.id ? 10 : 1);\n\n  if ((roll & 0x8000) > 0) {\n    roll = roll - 0x10000;\n  }\n  roll = roll / (angle_unit == AngleUnitTypes.Derece.id ? 10 : 1);\n\n  return {\n    distance,\n    distance_unit,\n    angle_unit,\n    azimuth,\n    elevation,\n    roll,\n  };\n}\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/index.ts",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/en.ts",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/locales/tr.ts",[],"/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/services/QueueService.ts",["238","239","240","241","242","243","244","245","246"],"import { chunk, findIndex, isEqual } from \"lodash\";\nimport BLEService from \"./BLEService\";\nimport { HexToBase64 } from \"../functions/Buffer\";\nimport { IStore } from \"../stores/InstantStore\";\nimport { Params, PROCESS_KEYS, PROCESS_KEYS_LENGTH } from \"../constants/Params\";\nimport { createIV, encrypt, decrypt } from \"../functions/AES\";\nimport { error, success } from \"../functions/toast\";\nimport { string } from \"../locales\";\nimport { findData } from \"../functions/findData\";\nconst Queue = require(\"fastq\");\n\ninterface ISendMessage {\n  device: any;\n  data: number[];\n}\n\ninterface IRecieveMessage {\n  data: number[];\n}\n\ninterface IProcessMessage {\n  data: number[];\n}\n\nconst params = Params();\n\nexport default class QueueService {\n  private _RECEIVE_MESSAGE_BUFFER: number[] = [];\n\n  public sendMessageQueue;\n  public receiveMessageQueue;\n  private processMessageQueue;\n  private sendMessageForChunkQueue;\n\n  public get RECEIVE_MESSAGE_BUFFER() {\n    return this._RECEIVE_MESSAGE_BUFFER;\n  }\n\n  public set RECEIVE_MESSAGE_BUFFER(value: number[]) {\n    this._RECEIVE_MESSAGE_BUFFER = value;\n  }\n\n  constructor() {\n    this.sendMessageQueue = Queue(this.sendMessage, 1);\n\n    this.sendMessageForChunkQueue = Queue(this.sendMessageForChunk, 1);\n\n    this.receiveMessageQueue = Queue(this.receiveMessage, 1);\n\n    this.processMessageQueue = Queue(this.processMessage, 1);\n  }\n\n  private sendMessage = (payload: ISendMessage, cb: any) => {\n    const { data } = payload;\n\n    const chunks = chunk(data, 20);\n\n    for (const chunk of chunks) {\n      this.sendMessageForChunkQueue.push({\n        data: chunk,\n      });\n    }\n\n    cb(null, true);\n  };\n\n  private sendMessageForChunk = (payload: ISendMessage, cb: any) => {\n    const { data } = payload;\n\n    const device = IStore.ble.getDevice();\n\n    if (device) {\n      device\n        .getPrimaryService(\"2456e1b9-26e2-8f83-e744-f34f01e9d701\")\n        .then((service: any) => {\n          return service.getCharacteristic(\n            \"2456e1b9-26e2-8f83-e744-f34f01e9d703\"\n          );\n        })\n        .then((characteristic: any) => {\n          return characteristic.writeValue(Uint8Array.from(data));\n        })\n        .then(() => {\n          cb(null, true);\n        })\n        .catch((e: any) => {\n          // console.error(e);\n          cb(e, false);\n        });\n    } else {\n      cb(new Error(\"Device not found\"), false);\n    }\n  };\n\n  private receiveMessage = (payload: IRecieveMessage, cb: any) => {\n    const { data: _data } = payload;\n\n    this.RECEIVE_MESSAGE_BUFFER.push(..._data);\n\n    if (IStore.isEncryptedCommunication) {\n      const index = findIndex(\n        this.RECEIVE_MESSAGE_BUFFER,\n        (item) => item == 0x7e\n      );\n      const secondIndex = findIndex(\n        this.RECEIVE_MESSAGE_BUFFER,\n        (item) => item == 0x7e,\n        index + 1\n      );\n\n      if (index !== -1 && secondIndex === -1 && index !== 0) {\n        this.RECEIVE_MESSAGE_BUFFER = this.RECEIVE_MESSAGE_BUFFER.slice(\n          index + 1\n        );\n      }\n\n      if (index !== -1 && secondIndex !== -1 && index !== secondIndex) {\n        try {\n          let data = this.RECEIVE_MESSAGE_BUFFER.slice(index, secondIndex + 1);\n\n          data.forEach((item, index) => {\n            if (item == 0x7d && data[index + 1] == 0x5e) {\n              data[index] = 0x7e;\n              // @ts-ignore\n              data[index + 1] = null;\n            } else if (item == 0x7d && data[index + 1] == 0x5d) {\n              data[index] = 0x7d;\n              // @ts-ignore\n              data[index + 1] = null;\n            }\n          });\n\n          data = data.filter((e) => e !== null);\n\n          try {\n            const iv = Uint8Array.from(data.slice(1, 17));\n            const encrypted_data = data.slice(17, data.length - 1);\n\n            const decrypted_data = decrypt(encrypted_data, iv);\n\n            this.processMessageQueue.push({\n              data: [...decrypted_data],\n            });\n          } catch (e) {}\n\n          this.RECEIVE_MESSAGE_BUFFER = this.RECEIVE_MESSAGE_BUFFER.slice(\n            secondIndex + 1\n          );\n        } catch (e) {}\n      }\n    } else {\n      const checkData = Object.values(PROCESS_KEYS_LENGTH);\n\n      for (const data of checkData) {\n        if (\n          this.RECEIVE_MESSAGE_BUFFER[1] === data.key &&\n          this.RECEIVE_MESSAGE_BUFFER.length == data.length\n        ) {\n          this.processMessageQueue.push({\n            data: [...this.RECEIVE_MESSAGE_BUFFER],\n          });\n\n          this.RECEIVE_MESSAGE_BUFFER = [];\n\n          return cb(null, true);\n        }\n      }\n    }\n\n    cb(null, true);\n  };\n\n  private processMessage = (payload: IProcessMessage, cb: any) => {\n    const { data } = payload;\n    const command = data[1];\n\n    // console.log(data.map((e) => e.toString(16)));\n\n    switch (command) {\n      case PROCESS_KEYS.KimlikDogrulamaSorgu:\n        BLEService._this.sendDataToDevice(\n          params.kimlikdurumbilgisi.title,\n          params.kimlikdurumbilgisi.getHex(\n            PROCESS_KEYS.KimlikDogrulamaSorgu,\n            0x00\n          )\n        );\n\n        const iv = createIV();\n\n        const message = data.slice(2, 18);\n        const encrypted = encrypt(message, iv);\n\n        BLEService._this.sendDataToDevice(\n          params.kimlikdogrulamasorgususifreli.title,\n          params.kimlikdogrulamasorgususifreli.getHex(iv, encrypted)\n        );\n        break;\n\n      case PROCESS_KEYS.KimlikDogrulama:\n        BLEService._this.sendDataToDevice(\n          params.kimlikdurumbilgisi.title,\n          params.kimlikdurumbilgisi.getHex(PROCESS_KEYS.KimlikDogrulama, 0x00)\n        );\n\n        IStore.controlData = createIV();\n\n        BLEService._this.sendDataToDevice(\n          params.kimlikdogrulamasorgu.title,\n          params.kimlikdogrulamasorgu.getHex(IStore.controlData)\n        );\n\n        break;\n\n      case PROCESS_KEYS.KimlikDurumBilgisi:\n        const cmd = data[2];\n        const status = data[3];\n\n        /* let title = \"Kimlik doğrulama başarısız\";\n        if (status == 0x01) error(title, \"Kontrol toplamı hatası\");\n        else if (status == 0x02) error(title, \"Komut hatası\");\n        else if (status == 0x03) error(title, \"Geçersiz mesaj paketi\");\n        else if (status == 0x04) error(title, \"Hatalı içerik\");*/\n\n        if (status != 0x00) {\n          IStore.loadingConnect = -1;\n          BLEService._this.stopListener();\n          error(\n            string[\"kimlikdogrulamabasarisiz\"],\n            string[\"desteklenmeyencihaz\"]\n          );\n        }\n\n        break;\n\n      case PROCESS_KEYS.KimlikDogrulamaSifreli:\n        const _iv = Uint8Array.from(data.slice(2, 18));\n        const _encrypted = data.slice(18, 34);\n\n        const decrypted = decrypt(_encrypted, _iv);\n\n        const isOk = isEqual(decrypted, IStore.controlData);\n\n        BLEService._this.sendDataToDevice(\n          params.kimlikdurumbilgisi.title,\n          params.kimlikdurumbilgisi.getHex(\n            PROCESS_KEYS.KimlikDogrulamaSifreli,\n            isOk ? 0x00 : 0x04\n          )\n        );\n\n        if (isOk) {\n          this.RECEIVE_MESSAGE_BUFFER = [];\n          IStore.isEncryptedCommunication = true;\n          IStore.loadingConnect = -1;\n          IStore.navigation?.goBack?.();\n          success();\n        }\n\n        break;\n\n      default:\n        const { key, value: res }: any = findData(HexToBase64(data));\n\n        BLEService._this.setData({ [key]: res });\n\n        // @ts-ignore\n        BLEService.event.emit(\"monitor\", {\n          key,\n          value: res,\n          all_data: BLEService._this.getData(),\n        });\n\n        // @ts-ignore\n        BLEService.event.emit(key, res);\n        break;\n    }\n\n    cb(null, true);\n  };\n}\n","/Users/batuhanoztrk/Documents/GitHub/aselsanlazer/aselsan-lazer-desktop-app/src/functions/AES.tsx",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":19,"column":6,"nodeType":"253","endLine":19,"endColumn":8,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":4,"column":18,"nodeType":"257","messageId":"258","endLine":4,"endColumn":26},{"ruleId":"255","severity":1,"message":"259","line":4,"column":28,"nodeType":"257","messageId":"258","endLine":4,"endColumn":36},{"ruleId":"255","severity":1,"message":"260","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"261","line":1,"column":28,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"262","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"255","severity":1,"message":"263","line":14,"column":10,"nodeType":"257","messageId":"258","endLine":14,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":28,"column":15,"nodeType":"266","messageId":"267","endLine":28,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":30,"column":18,"nodeType":"266","messageId":"267","endLine":30,"endColumn":20},{"ruleId":"264","severity":1,"message":"265","line":32,"column":18,"nodeType":"266","messageId":"267","endLine":32,"endColumn":20},{"ruleId":"264","severity":1,"message":"265","line":34,"column":18,"nodeType":"266","messageId":"267","endLine":34,"endColumn":20},{"ruleId":"268","severity":1,"message":"269","line":73,"column":15,"nodeType":"270","endLine":80,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":76,"column":28,"nodeType":"266","messageId":"267","endLine":76,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":88,"column":15,"nodeType":"270","endLine":95,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":91,"column":28,"nodeType":"266","messageId":"267","endLine":91,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":103,"column":15,"nodeType":"270","endLine":112,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":106,"column":28,"nodeType":"266","messageId":"267","endLine":106,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":120,"column":15,"nodeType":"270","endLine":127,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":123,"column":28,"nodeType":"266","messageId":"267","endLine":123,"endColumn":30},{"ruleId":"255","severity":1,"message":"271","line":6,"column":26,"nodeType":"257","messageId":"258","endLine":6,"endColumn":41},{"ruleId":"255","severity":1,"message":"272","line":20,"column":31,"nodeType":"257","messageId":"258","endLine":20,"endColumn":40},{"ruleId":"251","severity":1,"message":"273","line":53,"column":6,"nodeType":"253","endLine":53,"endColumn":8,"suggestions":"274"},{"ruleId":"264","severity":1,"message":"265","line":121,"column":28,"nodeType":"266","messageId":"267","endLine":121,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":121,"column":43,"nodeType":"266","messageId":"267","endLine":121,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":121,"column":58,"nodeType":"266","messageId":"267","endLine":121,"endColumn":60},{"ruleId":"268","severity":1,"message":"269","line":166,"column":17,"nodeType":"270","endLine":173,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":268,"column":23,"nodeType":"270","endLine":271,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":305,"column":17,"nodeType":"270","endLine":312,"endColumn":19},{"ruleId":"268","severity":1,"message":"269","line":401,"column":23,"nodeType":"270","endLine":404,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":482,"column":23,"nodeType":"270","endLine":485,"endColumn":25},{"ruleId":"255","severity":1,"message":"275","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"260","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":41,"column":13,"nodeType":"270","endLine":45,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":77,"column":17,"nodeType":"270","endLine":77,"endColumn":66},{"ruleId":"264","severity":1,"message":"265","line":111,"column":17,"nodeType":"266","messageId":"267","endLine":111,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":119,"column":20,"nodeType":"266","messageId":"267","endLine":119,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":171,"column":26,"nodeType":"266","messageId":"267","endLine":171,"endColumn":28},{"ruleId":"264","severity":1,"message":"276","line":181,"column":27,"nodeType":"266","messageId":"267","endLine":181,"endColumn":29},{"ruleId":"264","severity":1,"message":"276","line":188,"column":27,"nodeType":"266","messageId":"267","endLine":188,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":237,"column":51,"nodeType":"266","messageId":"267","endLine":237,"endColumn":53},{"ruleId":"264","severity":1,"message":"265","line":257,"column":31,"nodeType":"266","messageId":"267","endLine":257,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":292,"column":20,"nodeType":"266","messageId":"267","endLine":292,"endColumn":22},{"ruleId":"255","severity":1,"message":"260","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"277","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":16},{"ruleId":"268","severity":1,"message":"269","line":63,"column":9,"nodeType":"270","endLine":66,"endColumn":11},{"ruleId":"268","severity":1,"message":"269","line":77,"column":7,"nodeType":"270","endLine":80,"endColumn":9},{"ruleId":"268","severity":1,"message":"269","line":38,"column":9,"nodeType":"270","endLine":46,"endColumn":11},{"ruleId":"251","severity":1,"message":"278","line":36,"column":6,"nodeType":"253","endLine":36,"endColumn":8,"suggestions":"279"},{"ruleId":"264","severity":1,"message":"265","line":129,"column":14,"nodeType":"266","messageId":"267","endLine":129,"endColumn":16},{"ruleId":"255","severity":1,"message":"280","line":45,"column":10,"nodeType":"257","messageId":"258","endLine":45,"endColumn":17},{"ruleId":"255","severity":1,"message":"281","line":45,"column":19,"nodeType":"257","messageId":"258","endLine":45,"endColumn":29},{"ruleId":"255","severity":1,"message":"282","line":46,"column":10,"nodeType":"257","messageId":"258","endLine":46,"endColumn":17},{"ruleId":"255","severity":1,"message":"283","line":46,"column":19,"nodeType":"257","messageId":"258","endLine":46,"endColumn":29},{"ruleId":"255","severity":1,"message":"284","line":48,"column":10,"nodeType":"257","messageId":"258","endLine":48,"endColumn":17},{"ruleId":"251","severity":1,"message":"285","line":77,"column":6,"nodeType":"253","endLine":77,"endColumn":8,"suggestions":"286"},{"ruleId":"264","severity":1,"message":"265","line":109,"column":17,"nodeType":"266","messageId":"267","endLine":109,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":109,"column":33,"nodeType":"266","messageId":"267","endLine":109,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":109,"column":51,"nodeType":"266","messageId":"267","endLine":109,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":233,"column":9,"nodeType":"270","endLine":240,"endColumn":11},{"ruleId":"264","severity":1,"message":"265","line":341,"column":14,"nodeType":"266","messageId":"267","endLine":341,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":393,"column":30,"nodeType":"266","messageId":"267","endLine":393,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":437,"column":27,"nodeType":"270","endLine":442,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":470,"column":27,"nodeType":"270","endLine":473,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":508,"column":27,"nodeType":"270","endLine":511,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":640,"column":27,"nodeType":"270","endLine":646,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":723,"column":29,"nodeType":"270","endLine":728,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":753,"column":11,"nodeType":"270","endLine":756,"endColumn":13},{"ruleId":"255","severity":1,"message":"287","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":21},{"ruleId":"251","severity":1,"message":"288","line":59,"column":6,"nodeType":"253","endLine":59,"endColumn":8,"suggestions":"289"},{"ruleId":"264","severity":1,"message":"265","line":148,"column":14,"nodeType":"266","messageId":"267","endLine":148,"endColumn":16},{"ruleId":"290","severity":1,"message":"291","line":1,"column":1,"nodeType":"292","endLine":16,"endColumn":3},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"264","severity":1,"message":"265","line":47,"column":14,"nodeType":"266","messageId":"267","endLine":47,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":376,"column":53,"nodeType":"266","messageId":"267","endLine":376,"endColumn":55},{"ruleId":"293","severity":1,"message":"294","line":196,"column":1,"nodeType":"295","messageId":"267","endLine":198,"endColumn":2},{"ruleId":"296","severity":1,"message":"297","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"298","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":21},{"ruleId":"296","severity":1,"message":"299","line":5,"column":23,"nodeType":"257","messageId":"258","endLine":5,"endColumn":34},{"ruleId":"296","severity":1,"message":"300","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":96,"column":7,"nodeType":"303","messageId":"304","endLine":96,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":110,"column":15,"nodeType":"266","messageId":"267","endLine":110,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":112,"column":22,"nodeType":"266","messageId":"267","endLine":112,"endColumn":24},{"ruleId":"301","severity":1,"message":"302","line":132,"column":18,"nodeType":"303","messageId":"304","endLine":132,"endColumn":38},{"ruleId":"264","severity":1,"message":"265","line":11,"column":21,"nodeType":"266","messageId":"267","endLine":11,"endColumn":23},{"ruleId":"264","severity":1,"message":"265","line":11,"column":63,"nodeType":"266","messageId":"267","endLine":11,"endColumn":65},{"ruleId":"264","severity":1,"message":"265","line":13,"column":27,"nodeType":"266","messageId":"267","endLine":13,"endColumn":29},{"ruleId":"264","severity":1,"message":"265","line":13,"column":68,"nodeType":"266","messageId":"267","endLine":13,"endColumn":70},{"ruleId":"264","severity":1,"message":"276","line":33,"column":21,"nodeType":"266","messageId":"267","endLine":33,"endColumn":23},{"ruleId":"264","severity":1,"message":"265","line":33,"column":61,"nodeType":"266","messageId":"267","endLine":33,"endColumn":63},{"ruleId":"264","severity":1,"message":"265","line":296,"column":35,"nodeType":"266","messageId":"267","endLine":296,"endColumn":37},{"ruleId":"264","severity":1,"message":"265","line":301,"column":39,"nodeType":"266","messageId":"267","endLine":301,"endColumn":41},{"ruleId":"264","severity":1,"message":"265","line":306,"column":29,"nodeType":"266","messageId":"267","endLine":306,"endColumn":31},{"ruleId":"264","severity":1,"message":"265","line":103,"column":24,"nodeType":"266","messageId":"267","endLine":103,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":107,"column":24,"nodeType":"266","messageId":"267","endLine":107,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":122,"column":22,"nodeType":"266","messageId":"267","endLine":122,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":122,"column":49,"nodeType":"266","messageId":"267","endLine":122,"endColumn":51},{"ruleId":"264","severity":1,"message":"265","line":126,"column":29,"nodeType":"266","messageId":"267","endLine":126,"endColumn":31},{"ruleId":"264","severity":1,"message":"265","line":126,"column":56,"nodeType":"266","messageId":"267","endLine":126,"endColumn":58},{"ruleId":"264","severity":1,"message":"265","line":157,"column":46,"nodeType":"266","messageId":"267","endLine":157,"endColumn":48},{"ruleId":"296","severity":1,"message":"305","line":216,"column":15,"nodeType":"257","messageId":"258","endLine":216,"endColumn":18},{"ruleId":"264","severity":1,"message":"276","line":225,"column":20,"nodeType":"266","messageId":"267","endLine":225,"endColumn":22},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'controlData'. Either include it or remove the dependency array.","ArrayExpression",["308"],"no-unused-vars","'HelpText' is defined but never used.","Identifier","unusedVar","'MoreInfo' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'ipcRenderer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'HomeScreenTypes' is defined but never used.","'useSwiper' is defined but never used.","React Hook useEffect has missing dependencies: '_setData', 'auto', and 'controlDevice'. Either include them or remove the dependency array.",["309"],"'Col' is defined but never used.","Expected '!==' and instead saw '!='.","'IStore' is defined but never used.","React Hook useEffect has a missing dependency: 'controlDevice'. Either include it or remove the dependency array.",["310"],"'heading' is assigned a value but never used.","'setHeading' is assigned a value but never used.","'compass' is assigned a value but never used.","'setCompass' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ble' and 'getLocation'. Either include them or remove the dependency array.",["311"],"'InputNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'controlDevice' and 'getLocation'. Either include them or remove the dependency array.",["312"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","@typescript-eslint/no-unused-vars","'findData' is defined but never used.","'Base64ToHex' is defined but never used.","'HexToBase64' is defined but never used.","'l_moment' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'cmd' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [controlData]",{"range":"323","text":"324"},"Update the dependencies array to be: [_setData, auto, controlDevice]",{"range":"325","text":"326"},"Update the dependencies array to be: [controlDevice]",{"range":"327","text":"328"},"Update the dependencies array to be: [ble, getLocation]",{"range":"329","text":"330"},"Update the dependencies array to be: [controlDevice, getLocation]",{"range":"331","text":"332"},[508,510],"[controlData]",[1755,1757],"[_setData, auto, controlDevice]",[1163,1165],"[controlDevice]",[2417,2419],"[ble, getLocation]",[2074,2076],"[controlDevice, getLocation]"]